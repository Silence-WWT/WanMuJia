var AddressList=React.createClass({displayName:"AddressList",getInitialState:function(){return{nowAddress:null,isWrapShow:!1}},handleBtnClick:function(){this.setState({isWrapShow:!this.state.isWrapShow})},handleSelectAddress:function(e){this.setState({nowAddress:e,isWrapShow:!1}),this.props.setCity&&this.props.setCity(e)},render:function(){return React.createElement("div",{className:"AddressList"},React.createElement(AddressDropButton,{triangleState:this.state.isWrapShow,onClick:this.handleBtnClick},this.state.nowAddress?this.state.nowAddress:this.props.localAddress),this.state.isWrapShow?React.createElement(AddressWrap,{addressData:this.props.addressData,localAddress:this.props.localAddress,handleSelectAddress:this.handleSelectAddress}):null)}}),AddressDropButton=React.createClass({displayName:"AddressDropButton",handleClick:function(){this.props.onClick()},render:function(){return React.createElement("button",{className:"AddressDropButton",onClick:this.handleClick},this.props.children,React.createElement("span",{className:"triangle "+this.props.triangleState}))}}),AddressWrap=React.createClass({displayName:"AddressWrap",render:function(){return React.createElement("div",{className:"AddressWrap"},React.createElement("div",{className:"AddressCont"},React.createElement(AddressLocation,{localAddress:this.props.localAddress,handleSelectAddress:this.props.handleSelectAddress}),React.createElement(AddressSearchInput,{addressData:this.props.addressData,handleSelectAddress:this.props.handleSelectAddress}),React.createElement(AddressListWrap,{addressData:this.props.addressData,handleSelectAddress:this.props.handleSelectAddress})))}}),AddressLocation=React.createClass({displayName:"AddressLocation",handleClick:function(){this.props.handleSelectAddress(this.props.localAddress)},render:function(){return React.createElement("div",{className:"AddressLocation"},"猜你在：",React.createElement("span",{onClick:this.handleClick},this.props.localAddress))}}),AddressSearchInput=React.createClass({displayName:"AddressSearchInput",getInitialState:function(){return{result:[]}},handleResultClick:function(e){var t=e.target.getAttribute("data");this.props.handleSelectAddress(t)},handleSearch:function(e){var t=e.target.value,s=t.length,a=this.props.addressData,i=/^[\u4E00-\u9FA5]+$/;if(i.test(t)){var r=[],n=0;for(var o in a)for(var c in a[o])a[o][c].city.substring(0,s)==t&&(r[n]=a[o][c].city,n++);return void this.setState({result:r})}var l=t.substring(0,1).toLocaleUpperCase(),p=a[l],d=[],h=0;for(var u in p)u.substring(0,s)==t.toLocaleLowerCase()&&(d[h]=p[u].city),h++;this.setState({result:d})},render:function(){var e=this.handleResultClick,t=this.state.result.map(function(t){return React.createElement("li",{data:t,onClick:e},t)});return React.createElement("div",{className:"AddressSearch"},"直接搜索",React.createElement("input",{onChange:this.handleSearch,placeholder:"请输入城市名"}),React.createElement("ul",{className:"AddressSearchResult"},t))}}),AddressListWrap=React.createClass({displayName:"AddressListWrap",render:function(){var e=this.props.addressData,t=this.props.handleSelectAddress,s=function(e){var s=[],a=0;for(var i in e)s[a]=React.createElement(AddressListRow,{key:i,keyData:i,data:e[i],handleSelectAddress:t}),a++;return s}(e);return React.createElement("div",{className:"AddressListWrap"},s)}}),AddressListRow=React.createClass({displayName:"AddressListRow",handleClick:function(e){var t=e.target.getAttribute("data");this.props.handleSelectAddress(t)},render:function(){var e=this.handleClick,t=function(t){var s=[],a=0;for(var i in t)s[a]=React.createElement("span",{key:"p"+i},React.createElement("span",{data:t[i].city,key:a,onClick:e},t[i].city)),a++;return s}(this.props.data);return React.createElement("div",{className:"AddressListRow"},React.createElement("span",{className:"keyData"},this.props.keyData),React.createElement("span",{className:"dataWrap"},t))}}),AddressPicker=React.createClass({displayName:"AddressPicker",getInitialState:function(){return{city:"北京",currentCity:null,address:this.props.keyword}},getDefaultProps:function(){return{}},componentWillMount:function(){var e=new BMap.LocalCity;e.get(function(e){var t=e.name;this.setState({currentCity:t,city:t})}.bind(this))},setAddress:function(e){this.setState({address:e})},setCity:function(e){this.setState({city:e})},render:function(){var e=this.state.address?this.props.addressPickerActiveStyle:{};return React.createElement("div",{className:"address-picker",style:e},React.createElement(AddressList,{setCity:this.setCity,localAddress:this.state.currentCity,addressData:this.props.addressData}),React.createElement(AddressInput,React.__spread({},this.props,{city:this.state.city,searchSubmitHandler:this.setAddress})),React.createElement(AddressMap,{addressKeyword:this.state.address,city:this.state.city,theme:this.props.theme,lbs:this.props.lbs}))}}),AddressSearch=React.createClass({displayName:"AddressSearch",getInitialState:function(){return{address:null}},getDefaultProps:function(){return{inputWidth:400,inputTip:"输入想要搜索的地址",searchBtnText:"搜索",city:"北京",theme:"dark"}},componentWillMount:function(){var e=new BMap.LocalCity;e.get(function(e){var t=e.name;this.setCity(t)}.bind(this))},setAddress:function(e){this.setState({address:e})},setCity:function(e){this.setState({city:e})},render:function(){return React.createElement("div",{className:"address-search"},React.createElement(AddressInput,React.__spread({},this.props,{searchSubmitHandler:this.setAddress})),React.createElement(AddressMap,{addressKeyword:this.state.address,city:this.props.city,theme:this.props.theme}))}}),AddressInput=React.createClass({displayName:"AddressInput",getInitialState:function(){return{keyword:this.props.keyword}},getDefaultProps:function(){return{inputWidth:400,inputTip:"输入想要搜索的地址",searchBtnText:"搜索",city:"北京",theme:"light"}},searchSubmit:function(){var e=this.getDOMNode().children[0].value,t=new Date;this.props.searchSubmitHandler(e),setCookie("searchKeyword",e,t.setDate(t.getDate()+30))},checkEnter:function(e){13===e.keyCode&&this.searchSubmit()},componentDidMount:function(){new BMap.Autocomplete({input:"_addressSearchKeyword",location:this.props.city})},render:function(){var e={width:this.props.inputWidth},t="address-input";switch(this.props.theme){case"light":break;case"dark":t+=" dark"}return React.createElement("div",{className:t},React.createElement("input",{className:"input-keyword",id:"_addressSearchKeyword",onKeyUp:this.checkEnter,placeholder:this.state.keyword||this.props.inputTip,style:e}),React.createElement("button",{className:"input-commit",onClick:this.searchSubmit},this.props.searchBtnText))}}),AddressMap=React.createClass({displayName:"AddressMap",getInitialState:function(){return{mapLocalObj:null,itemsNumber:0,itemsList:[],itemActive:0}},getDefaultProps:function(){return{theme:"light"}},componentDidMount:function(){this.map=new BMap.Map("_addressMapMain",{enableMapClick:!1}),this.map.centerAndZoom(this.props.city,12)},componentWillReceiveProps:function(e){e.addressKeyword&&this.getNearby(e.addressKeyword)},getNearby:function(e,t){var s=new BMap.Geocoder,a=this;s.getPoint(e,function(e){e?s.getLocation(e,function(t){a.compareCity(t.addressComponents.city,a.props.city)?$.ajax({type:"get",url:"http://api.map.baidu.com/geosearch/v3/nearby",dataType:"jsonp",data:{ak:a.props.lbs.ak,geotable_id:a.props.lbs.geotableId,location:e.lng+","+e.lat,radius:a.props.lbs.radius,tags:a.props.lbs.tags,sortby:a.props.lbs.sortby,page_index:a.props.lbs.page||0,filter:a.props.lbs.filter,page_size:50},jsonp:"callback",success:function(e){a.setState({itemsNumber:e.total,itemsList:e.contents}),a.showNearby(),a.map.centerAndZoom(a.props.addressKeyword,12)}}):a.noItemsToShow()}):a.noItemsToShow()}.bind(this),this.props.city)},compareCity:function(e,t){return e.replace(/市$/,"")===t.replace(/市$/,"")},noItemsToShow:function(){console.log("暂无商家")},showNearby:function(){var e=this;for(var t in this.state.itemsList){var s=new BMap.Point(this.state.itemsList[t].location[0],this.state.itemsList[t].location[1]),a=new BMap.Marker(s),i=new BMap.Label(String.fromCharCode(65+parseInt(t)),{offset:new BMap.Size(4,2)});i.setStyle({border:"none",backgroundColor:"transparent",color:"#FAFAFA"}),a.setLabel(i),a.setTitle(this.state.itemsList[t].title),a.addEventListener("click",function(t){e.showInfoWindow(this.getLabel().content.charCodeAt(0)-65)}),this.map.addOverlay(a)}this.state.itemsList.length&&this.showInfoWindow(0)},showInfoWindow:function(e){if(e!==this.state.itemActive,!0){var t=new BMap.Point(this.state.itemsList[e].location[0],this.state.itemsList[e].location[1]),s=this.state.itemsList[e],a=s.title,i=s.address,r=(s.tel,'<p class="map-info-window">地址：'+i+"</p>"),n=new BMap.InfoWindow(r,{title:a,width:290,panel:"panel",enableAutoPan:!0,offset:new BMap.Size(0,-25)});this.setState({itemActive:+e}),this.map.openInfoWindow(n,t)}},clickMapItem:function(e){var t=e.target,s=t.getAttribute("class"),a=0;a="map-item"===s?t.getAttribute("data-key"):"map-item-mark"===s||"map-item-main"===s?t.parentNode.getAttribute("data-key"):s?t.parentNode.parentNode.getAttribute("data-key"):t.parentNode.parentNode.parentNode.getAttribute("data-key"),this.showInfoWindow(a)},render:function(){var e="address-map";switch(this.props.theme){case"light":break;case"dark":e+=" dark"}var t={backgroundColor:"#181211"};return React.createElement("div",{className:e,style:{display:this.props.addressKeyword?"block":"none"}},React.createElement("div",{className:"map-nav"},React.createElement("div",{className:"map-nav-title"},"附近有",React.createElement("span",{className:"map-nav-number"},this.state.itemsNumber),"家体验店"),React.createElement("ul",{className:"map-items",id:"_addressMapItems",onClick:this.clickMapItem},this.state.itemsList.length?this.state.itemsList.map(function(e,s){return React.createElement("li",{className:"map-item","data-key":s,key:s,style:s===this.state.itemActive?t:{}},React.createElement("span",{className:"map-item-mark"},String.fromCharCode(65+s)),React.createElement("div",{className:"map-item-main"},React.createElement("div",{className:"map-item-title"},e.title),React.createElement("div",{className:"map-item-address"},"地址：",e.address),React.createElement("div",{className:"map-item-tel"},"电话：",e.tel)))}.bind(this)):React.createElement("div",{className:"no-items"},"您所在的城市目前还没有该家具的体验馆，敬请期待"))),React.createElement("div",{className:"map-main",id:"_addressMapMain"}))}}),FilterOption=React.createClass({displayName:"FilterOption",render:function(){var e,t=this.props.value,s=function(e){!this.props.isMultiSelect&&e&&e.preventDefault(),this.props.onSelect(t)}.bind(this),a=React.createElement("span",null,t.value);return e=this.props.isMultiSelect?React.createElement("label",{href:"#",htmlFor:t.name},React.createElement("input",{onClick:s,type:"checkbox",name:t.name,value:t.value,id:t.value}),a):React.createElement("a",{href:"#",onClick:s},a)}}),FilterAction=React.createClass({displayName:"FilterAction",render:function(){return React.createElement("div",{className:"filter-action"},React.createElement("a",{style:{display:this.props.multiToggleStatus?"inline":"none"},onClick:this.props.multiToggle,href:"#",className:"multi-toggle"},"多选"),React.createElement("a",{onClick:this.props.expandToggle,href:"#"},this.props.expandToggleStatus?"更多":"收起"))}}),FilterStateTag=React.createClass({displayName:"FilterStateTag",render:function(){var e,t=function(e,t){t&&t.preventDefault(),this.props.onTagRemove(e)}.bind(this),s=Array.isArray(this.props.value)?this.props.value:[this.props.value];return e=s.map(function(e,s,a){return this.props.treeView?React.createElement("span",{key:s},e.value," ",React.createElement("span",{className:"tag-remove"},React.createElement("a",{onClick:t.bind(this,e),href:"#"},"×")),s==a.length-1?null:React.createElement("span",null,">")):s==a.length-1?React.createElement("span",{key:s},e.value," ",React.createElement("span",{className:"tag-remove"},React.createElement("a",{onClick:t.bind(this,e),href:"#"},"×"))):React.createElement("span",{key:s},e.value+","," ")}.bind(this)),React.createElement("div",{className:"filter-tag"},React.createElement("div",{className:"tag-name"},this.props.name+":"," "),React.createElement("div",{className:"tag-value"},e))}}),FilterStateBar=React.createClass({displayName:"FilterStateBar",render:function(){var e=this.props.filterState,t=Object.keys(e).map(function(t,s){var a=e[t],i=this.props.getFilterDef(t);return React.createElement(FilterStateTag,{key:s,name:i.name,value:a,treeView:i.treeView,onTagRemove:this.props.onStateDelete.bind(null,t)})}.bind(this));return React.createElement("div",{className:"filter-state"},React.createElement("div",{className:"custom-content"},this.props.children),React.createElement("div",{className:"filter-tags"},t))}}),Filter=React.createClass({displayName:"Filter",getInitialState:function(){return{isMultiSelect:!1,isExpanded:!1,multiSelected:{}}},getDefaultProps:function(){return{canMultiSelect:!1,treeView:!1,options:[]}},multiSelectToggle:function(e){e&&e.preventDefault(),this.setState({isMultiSelect:!this.state.isMultiSelect,isExpanded:this.state.isMultiSelect?!1:!0})},expandToggle:function(e){e&&e.preventDefault(),this.setState({isMultiSelect:this.state.isExpanded?!1:this.state.isMultiSelect,isExpanded:!this.state.isExpanded})},updateMultiSelected:function(e){var t=this.state.multiSelected;t[e.value]=t[e.value]?null:e,this.setState({multiSelected:t})},confirmMultiSelect:function(e){e&&e.preventDefault();var t=this.state.multiSelected,s=[];for(var a in t)t.hasOwnProperty(a)&&t[a]&&s.push(t[a]);this.props.onSelectOption(s),this.setState({multiSelected:{}}),this.multiSelectToggle()},render:function(){var e=function(e){return this.state.isMultiSelect?void this.updateMultiSelected(e):void this.props.onSelectOption(e)}.bind(this),t=this.props.options.map(function(t,s){return React.createElement("li",{key:s,className:"filter-item"},React.createElement(FilterOption,{value:t,onSelect:e,isMultiSelect:this.state.isMultiSelect}))}.bind(this));return React.createElement("div",{className:"filter"+(this.state.isExpanded?" expanded":""),style:{display:this.props.options.length>0?"block":"none"}},React.createElement("div",{className:"head"},React.createElement("h4",{className:"filter-name"},this.props.name)),React.createElement("div",{className:"body"},React.createElement("ul",{className:"filter-items"},t),React.createElement("div",{style:{display:this.state.isMultiSelect?"block":"none"},className:"multi-confirm"},React.createElement("button",{className:"btn-confirm",onClick:this.confirmMultiSelect,type:"button",name:"confirm"},"确定"),React.createElement("button",{className:"btn-cancel",type:"button",name:"cancel",onClick:this.multiSelectToggle},"取消"))),React.createElement("div",{className:"foot"},React.createElement(FilterAction,{multiToggleStatus:this.props.canMultiSelect&&!this.state.isMultiSelect,expandToggleStatus:!this.state.isExpanded,multiToggle:this.multiSelectToggle,expandToggle:this.expandToggle})))}}),FilterGroup=React.createClass({displayName:"FilterGroup",getInitialState:function(){return{filterValues:this.props.filterValues,filterState:{}}},getDefaultProps:function(){return{filterValues:{},onStateChange:function(){}}},componentDidMount:function(){var e=this.props.filterDefs.reduce(function(e,t){return e[t.field]=t,e},{});this.setState({defIndex:e})},updateFilterValue:function(e){this.setState({filterValues:e})},setFilterState:function(e){this.setState({filterState:e})},addFilterState:function(e,t){var s=this,a=s.state.defIndex,i=this.state.filterState,r=!1,n=!!i[e];if(a[e].treeView){var o=n?s.findIndex(i[e],t):-1,c=function(){if(!n)return!1;var a=i[e].length,r=s.props.filterValues[e]||[];return s.findIndex(r,t)>-1&&s.findIndex(r,i[e][a-1])>-1};r=!n||o!=i[e].length-1,r&&(i[e]=i[e]||[],o>=0?i[e]=i[e].slice(0,o+1):(c()&&i[e].pop(),i[e].push(t)))}else(!n||t.value!==i[e].value||Array.isArray(t)&&!s.isSameState(t,i[e]))&&(Array.isArray(t)&&0===t.length?s.removeFilterState(e):(i[e]=t,r=!0));r&&(s.setState({filterState:i}),s.props.onStateChange(this.state.filterState,s))},removeFilterState:function(e,t){var s,a=this.state.defIndex,i=this.state.filterState;a[e].treeView?(s=this.findIndex(i[e],t),0===s?delete i[e]:s>0&&(i[e]=i[e].slice(0,s))):delete i[e],this.setState({filterState:i}),this.props.onStateChange(this.state.filterState,this)},getFilterDef:function(e){return this.state.defIndex[e]},isSameState:function(e,t){var s=this;return s.isEmptyObj(e)&&!s.isEmptyObj(t)||!s.isEmptyObj(e)&&s.isEmptyObj(t)?!1:s.isEmptyObj(e)&&s.isEmptyObj(t)||Object.keys(e).filter(function(e){return s.props.filterDefs.hasOwnProperty(e)}).every(function(s){return e[s]===t[s]||e[s].value===t[s].value?!0:Array.isArray(e[s])&&Array.isArray(t[s])?e[s].every(function(e,a){return e===t[s][a]||e.value===t[s][a].value}):!1})},isSameValueArray:function(e,t){return e.every(function(e,s){return e.value===t[s].value})},isEmptyObj:function(e){return 0===Object.keys(e).length},findIndex:function(e,t){for(var s=0;s<e.length;s++)if(e[s].value===t.value)return s;return-1},render:function(){var e=this.props.filterDefs.map(function(e,t){var s=this.state.filterValues[e.field]||[];return React.createElement("li",{key:t,style:{display:s.length>0?"block":"none"}},React.createElement(Filter,{name:e.name,field:e.field,canMultiSelect:e.canMultiSelect,treeView:e.treeView,options:s,onSelectOption:this.addFilterState.bind(null,e.field)}))}.bind(this));return React.createElement("div",{className:"cu-filter-group"},React.createElement(FilterStateBar,{filterState:this.state.filterState,getFilterDef:this.getFilterDef,onStateDelete:this.removeFilterState},this.props.children),React.createElement("ul",{className:"filter-group"},e))}}),PaginationBtn=React.createClass({displayName:"PaginationBtn",getDefaultProps:function(){return{text:1,type:"num"}},render:function(){var e="dot"===this.props.type?"...":this.props.text,t=this.props.active?"item active":"item";return"num"!==this.props.type&&(t+=" page "+this.props.type),this.props.disabled&&(t+=" disabled"),React.createElement("li",{className:t,onClick:this.props.changePage},React.createElement("a",null,e))}}),PagiOverview=React.createClass({displayName:"PagiOverview",render:function(){return React.createElement("div",{className:"overview"},"共 ",this.props.pages," 页，")}}),PagiQuickGo=React.createClass({displayName:"PagiQuickGo",getInitialState:function(){return{pageInput:null}},inputChange:function(e){this.setState({pageInput:e.target.value})},quickGo:function(){if(this.state.pageInput){var e=+this.state.pageInput;e=1>e?1:e,e=e>this.props.pages?this.props.pages:e,this.props.setActivePage(e)}},render:function(){return React.createElement("div",{className:"quick-go"},React.createElement("span",null,"到第"),React.createElement("input",{className:"go-page",type:"number",min:"1",max:this.props.pages,onChange:this.inputChange}),React.createElement("span",null,"页"),React.createElement("button",{className:"go-submit",onClick:this.quickGo},"确认"))}}),PagiMain=React.createClass({displayName:"PagiMain",getInitialState:function(){return{pageItems:this.getPageItems(this.props.activePage)}},componentWillReceiveProps:function(e){if(e.activePage!==this.props.activePage||e.pages!==this.props.pages){var t=this.getPageItems(e.activePage,e.pages);this.setState({pageItems:t}),e.activePage!==this.props.activePage&&this.props.selected(e.activePage)}},handleItemClick:function(e,t){t="first"===e?1:"prev"===e?1===this.props.activePage?1:this.props.activePage-1:"next"===e?this.props.activePage===this.props.pages?this.props.pages:this.props.activePage+1:"last"===e?this.props.pages:t>this.props.pages?this.props.pages:t,t!==this.props.activePage&&this.props.setActivePage(t)},getPageItems:function(e,t){var s=[],a=this.props.basePages,i=this.props.midPages,r=t||this.props.pages;return e<=parseInt(i/2)+1?s=this._getSeriesNumber(1,a+i>=r?r:i):e<=parseInt(i/2)+1+a||a+i>=r?s=this._getSeriesNumber(1,a+i>=r?r:e+2):e<r-parseInt(i/2)-1?(s=this._getSeriesNumber(1,this.props.basePages),s.push(0),s=s.concat(this._getSeriesNumber(e-2,i)),r>i+a+2&&s.push(0)):e===r-parseInt(i/2)-1?(s=this._getSeriesNumber(1,this.props.basePages),s.push(0),s=s.concat(this._getSeriesNumber(r-i,i+1))):(s=this._getSeriesNumber(1,this.props.basePages),s.push(0),s=s.concat(this._getSeriesNumber(r-i+1,i))),s},_getSeriesNumber:function(e,t){e=e,t=t;for(var s=[];t--;)s.push(e++);return s},render:function(){var e=[],t=[];return this.props.pages>0&&(this.props.first&&e.push(React.createElement(PaginationBtn,{key:"first",text:this.props.first,disabled:1===this.props.activePage?!0:!1,type:"prev",type:"first",changePage:this.handleItemClick.bind(this,"first")})),this.props.prev&&e.push(React.createElement(PaginationBtn,{key:"prev",text:this.props.prev,disabled:1===this.props.activePage?!0:!1,type:"prev",changePage:this.handleItemClick.bind(this,"prev")})),this.props.next&&t.push(React.createElement(PaginationBtn,{key:"next",text:this.props.next,type:"next",disabled:this.props.activePage===this.props.pages?!0:!1,changePage:this.handleItemClick.bind(this,"next")})),this.props.last&&t.push(React.createElement(PaginationBtn,{key:"last",text:this.props.last,type:"last",disabled:this.props.activePage===this.props.pages?!0:!1,changePage:this.handleItemClick.bind(this,"last")}))),React.createElement("ul",{className:"pagi-main"},e,this.props.pages>0&&this.state.pageItems.map(function(e,t){return React.createElement(PaginationBtn,{key:t,text:e,type:e?"num":"dot",active:e===this.props.activePage?!0:!1,changePage:e?this.handleItemClick.bind(this,"num",e):null})}.bind(this)),t)}}),Pagination=React.createClass({displayName:"Pagination",propTypes:{pages:React.PropTypes.number},getInitialState:function(){return{activePage:this.props.activePage}},getDefaultProps:function(){return{activePage:1,first:null,prev:"上一页",basePages:2,midPages:5,ellipsis:!0,next:"下一页",last:null,theme:"light",quickGo:!1,selected:function(e){console.log(e)}}},componentWillReceiveProps:function(e){e.activePage!==this.props.activePage&&this.setActivePage(e.activePage)},setActivePage:function(e){this.setState({activePage:e})},render:function(){var e="light"===this.props.theme?"pagination":"pagination "+this.props.theme;return React.createElement("div",{className:e},React.createElement(PagiMain,React.__spread({},this.props,{activePage:this.state.activePage,setActivePage:this.setActivePage})),this.props.quickGo?React.createElement(PagiOverview,{pages:this.props.pages}):null,this.props.quickGo?React.createElement(PagiQuickGo,{pages:this.props.pages,setActivePage:this.setActivePage}):null)}}),Spinner=React.createClass({displayName:"Spinner",render:function(){return React.createElement("div",{className:"cu-spinner",style:{borderColor:this.props.color,borderLeftColor:"transparent"}})}}),ProgressBar=React.createClass({displayName:"ProgressBar",getInitialState:function(){return{rate:null,done:!1}},getDefaultProps:function(){return{speed:.6,spinner:!0,easing:"ease",maxRate:.96,incStep:.04,minStep:.005,maxStep:.03,trickle:!0,trickleSpeed:800,color:"#09c4c7",setTrickle:!1}},start:function(){this._init(),this.set("0.5%"),this.props.trickle&&this._autoInc()},set:function(e,t){!t&&this._init(),e=this._format(e),100===e?this.setState({rate:100}):(e=e>100*this.props.maxRate?100*this.props.maxRate:e,this.setState({rate:e}))},inc:function(e){this._init(),this.props.trickle&&this._autoInc(),e=e?this._format(e):100*this.props.incStep;var t=this.state.rate+e;this.set(t+"%",!0)},done:function(){this.set("100%"),setTimeout(function(){this.setState({done:!0}),setTimeout(function(){this.setState({rate:null})}.bind(this),2*this.props.speed*1e3)}.bind(this),1e3*this.props.speed)},_format:function(e){return"number"==typeof e?e>1?100*this.pros.maxRate:100*e:"string"==typeof e?parseFloat(e)>100?100*this.props.maxRate:parseFloat(e):void 0},_init:function(){this.state.done&&this.setState({done:!1}),this.timer&&this._clearInterval()},_autoInc:function(){var e,t;this.timer=setInterval(function(){return t=this._getRadomStep(),e=this.state.rate+t,console.log(t),e>100*this.props.maxRate?(console.log(100*this.props.maxRate),void this._clearInterval()):(console.log(e),void this.set(e+"%",!0))}.bind(this),this.props.trickleSpeed)},_clearInterval:function(){this.timer&&clearInterval(this.timer)},_getRadomStep:function(e,t){return e=e||100*this.props.minStep,t=t||100*this.props.maxStep,Math.random()*(t-e)+e},render:function(){var e={opacity:this.state.done?0:1,transition:"opacity "+this.props.speed+"s "+this.props.easing},t={width:this.state.rate?this.state.rate+"%":0,transition:"width "+this.props.speed+"s "+this.props.easing,backgroundColor:this.props.color,boxShadowColor:this.props.color};return this.state.rate?React.createElement("div",{className:"cu-progress",style:e},React.createElement("div",{className:"cu-progress-bar",style:t}),this.props.spinner?React.createElement(Spinner,{color:this.props.color}):null):null}}),ToolTip=React.createClass({displayName:"ToolTip",getDefaultProps:function(){return{tip:"tip",trigger:"hover",delay:0,hoverable:!1,position:"tip",width:"200px",type:"span",aHref:"#"}},getInitialState:function(){return{position:this.props.position,isActive:!1,isOnTip:!1,tipHeight:""}},handleMouseOver:function(e){"hover"==this.props.trigger&&this.setState({isActive:!0})},handleMouseOut:function(e){"hover"==this.props.trigger&&setTimeout(function(){return this.state.isOnTip?!1:void this.setState({isActive:!1})}.bind(this),this.props.delay)},handleClick:function(e){"click"==this.props.trigger&&(this.state.isActive?this.setState({isActive:!1}):this.state.isActive||this.setState({isActive:!0}))},handleTipMouseOver:function(e){this.props.hoverable&&(this.setState({isOnTip:!0}),this.setState({isActive:!0}))},handleTipMouseOut:function(e){this.props.hoverable&&(this.setState({isOnTip:!1}),this.setState({isActive:!1}))},componentDidUpdate:function(){this.setTipPosition()},setTipPosition:function(){var e=this.refs.tip.getDOMNode(),t=this.refs.cont.getDOMNode();this.flag||(this.state.tipHeight=e.offsetHeight,this.flag=1);var s=e.offsetWidth,a=e.offsetHeight,i=t.offsetWidth,r=t.offsetHeight;switch(this.state.position){case"left":e.style.top=-(a-r)/2+"px",e.style.left=-(s+20)+"px";break;case"right":e.style.top=-(a-r)/2+"px",e.style.left="100%";break;case"top":e.style.left=-(s-i)/2+"px",e.style.bottom="100%";break;case"bottom":e.style.left=-(s-i)/2+"px",e.style.top="100%";break;default:e.style.top=-(a-r)/2+"px",e.style.left=-(s+20)+"px"}e.style.height=this.state.tipHeight-20+"px",this.prevertTipOverflow()},prevertTipOverflow:function(){var e=this.refs.tip.getDOMNode().getBoundingClientRect().left,t=(this.refs.tip.getDOMNode().getBoundingClientRect().top,this.refs.tip.getDOMNode().offsetWidth),s=(this.refs.tip.getDOMNode().offsetHeight,parseInt(document.body.clientWidth));if(0>e&&e+t>s)return!0;if(0>e){if("left"==this.state.position)return void this.setState({position:"top"});if("top"==this.state.position||"bottom"==this.state.position)return void this.setState({position:"right"})}if(e+t>s){if("right"==this.state.position)return void this.setState({position:"bottom"});if("bottom"==this.state.position||"top"==this.state.position)return void this.setState({position:"left"})}},getTipStyle:function(){return{display:this.state.isActive?"block":"none",color:"pink",backgroundColor:"#333",width:this.props.width}},render:function(){return"span"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("span",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"a"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("a",{href:this.props.aHref,ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):"button"==this.props.type?React.createElement("span",{className:"tooltip "+this.state.position},React.createElement("button",{ref:"cont",onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut,onClick:this.handleClick},this.props.children),React.createElement("div",{onMouseOver:this.handleTipMouseOver,onMouseOut:this.handleTipMouseOut,className:"tip",ref:"tip",style:this.getTipStyle()},this.props.tip)):void 0}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkZHJlc3NMaXN0L0FkZHJlc3NMaXN0LmpzeCIsIkFkZHJlc3NQaWNrZXIvQWRkcmVzc1BpY2tlci5qc3giLCJBZGRyZXNzU2VhcmNoL0FkZHJlc3NTZWFyY2guanN4IiwiRmlsdGVyR3JvdXAvRmlsdGVyR3JvdXAuanN4IiwiUGFnaW5hdGlvbi9QYWdpbmF0aW9uLmpzeCIsIlByb2dyZXNzQmFyL1Byb2dyZXNzQmFyLmpzeCIsIlRvb2x0aXAvVG9vbHRpcC5qc3giXSwibmFtZXMiOlsiQWRkcmVzc0xpc3QiLCJSZWFjdCIsImNyZWF0ZUNsYXNzIiwiZGlzcGxheU5hbWUiLCJnZXRJbml0aWFsU3RhdGUiLCJub3dBZGRyZXNzIiwiaXNXcmFwU2hvdyIsImhhbmRsZUJ0bkNsaWNrIiwidGhpcyIsInNldFN0YXRlIiwic3RhdGUiLCJoYW5kbGVTZWxlY3RBZGRyZXNzIiwic2VsZWN0Q3QiLCJwcm9wcyIsInNldENpdHkiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiQWRkcmVzc0Ryb3BCdXR0b24iLCJ0cmlhbmdsZVN0YXRlIiwib25DbGljayIsImxvY2FsQWRkcmVzcyIsIkFkZHJlc3NXcmFwIiwiYWRkcmVzc0RhdGEiLCJoYW5kbGVDbGljayIsImNoaWxkcmVuIiwiQWRkcmVzc0xvY2F0aW9uIiwiQWRkcmVzc1NlYXJjaElucHV0IiwiQWRkcmVzc0xpc3RXcmFwIiwicmVzdWx0IiwiaGFuZGxlUmVzdWx0Q2xpY2siLCJlIiwiYWRkcmVzcyIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsImhhbmRsZVNlYXJjaCIsImV2ZW50IiwiY29udCIsInZhbHVlIiwibGVuIiwibGVuZ3RoIiwicmVnIiwidGVzdCIsIl9yZXN1bHRIIiwiaiIsImtleUgiLCJrZXlIUyIsImNpdHkiLCJzdWJzdHJpbmciLCJGTCIsInRvTG9jYWxlVXBwZXJDYXNlIiwicmVzdWx0RkwiLCJfcmVzdWx0IiwiaSIsImtleSIsInRvTG9jYWxlTG93ZXJDYXNlIiwiX2hhbmRsZVJlc3VsdENsaWNrIiwicmVzdWx0Tm9kZXMiLCJtYXAiLCJkYXRhIiwib25DaGFuZ2UiLCJwbGFjZWhvbGRlciIsInJvd05vZGVzIiwiQWRkcmVzc0xpc3RSb3ciLCJrZXlEYXRhIiwiZGF0YU5vZGVzIiwiQWRkcmVzc1BpY2tlciIsImN1cnJlbnRDaXR5Iiwia2V5d29yZCIsImdldERlZmF1bHRQcm9wcyIsImNvbXBvbmVudFdpbGxNb3VudCIsIm15Q2l0eSIsIkJNYXAiLCJMb2NhbENpdHkiLCJnZXQiLCJyZXMiLCJuYW1lIiwiYmluZCIsInNldEFkZHJlc3MiLCJhZCIsImN0IiwiYWRkcmVzc1BpY2tlckFjdGl2ZVN0eWxlIiwic3R5bGUiLCJBZGRyZXNzSW5wdXQiLCJfX3NwcmVhZCIsInNlYXJjaFN1Ym1pdEhhbmRsZXIiLCJBZGRyZXNzTWFwIiwiYWRkcmVzc0tleXdvcmQiLCJ0aGVtZSIsImxicyIsIkFkZHJlc3NTZWFyY2giLCJpbnB1dFdpZHRoIiwiaW5wdXRUaXAiLCJzZWFyY2hCdG5UZXh0Iiwic2VhcmNoU3VibWl0IiwiZ2V0RE9NTm9kZSIsImRhdGUiLCJEYXRlIiwic2V0Q29va2llIiwic2V0RGF0ZSIsImdldERhdGUiLCJjaGVja0VudGVyIiwia2V5Q29kZSIsImNvbXBvbmVudERpZE1vdW50IiwiQXV0b2NvbXBsZXRlIiwiaW5wdXQiLCJsb2NhdGlvbiIsImtleXdvcmRTdHlsZSIsIndpZHRoIiwiY29uQ2xhc3NOYW1lIiwiaWQiLCJvbktleVVwIiwibWFwTG9jYWxPYmoiLCJpdGVtc051bWJlciIsIml0ZW1zTGlzdCIsIml0ZW1BY3RpdmUiLCJNYXAiLCJlbmFibGVNYXBDbGljayIsImNlbnRlckFuZFpvb20iLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwiZ2V0TmVhcmJ5IiwicGFnZSIsIm15R2VvIiwiR2VvY29kZXIiLCJfdGhpcyIsImdldFBvaW50IiwicG9pbnQiLCJnZXRMb2NhdGlvbiIsImdlbyIsImNvbXBhcmVDaXR5IiwiYWRkcmVzc0NvbXBvbmVudHMiLCIkIiwiYWpheCIsInR5cGUiLCJ1cmwiLCJkYXRhVHlwZSIsImFrIiwiZ2VvdGFibGVfaWQiLCJnZW90YWJsZUlkIiwibG5nIiwibGF0IiwicmFkaXVzIiwidGFncyIsInNvcnRieSIsInBhZ2VfaW5kZXgiLCJmaWx0ZXIiLCJwYWdlX3NpemUiLCJqc29ucCIsInN1Y2Nlc3MiLCJ0b3RhbCIsImNvbnRlbnRzIiwic2hvd05lYXJieSIsIm5vSXRlbXNUb1Nob3ciLCJjdDEiLCJjdDIiLCJyZXBsYWNlIiwiY29uc29sZSIsImxvZyIsImsiLCJQb2ludCIsIm1hcmtlciIsIk1hcmtlciIsImxhYmVsIiwiTGFiZWwiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJwYXJzZUludCIsIm9mZnNldCIsIlNpemUiLCJzZXRTdHlsZSIsImJvcmRlciIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwic2V0TGFiZWwiLCJzZXRUaXRsZSIsInRpdGxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNob3dJbmZvV2luZG93IiwiZ2V0TGFiZWwiLCJjb250ZW50IiwiY2hhckNvZGVBdCIsImFkZE92ZXJsYXkiLCJpbmRleCIsIml0ZW1JbmZvIiwidGVsIiwiaW5mb1dpbmRvdyIsIkluZm9XaW5kb3ciLCJwYW5lbCIsImVuYWJsZUF1dG9QYW4iLCJvcGVuSW5mb1dpbmRvdyIsImNsaWNrTWFwSXRlbSIsImVsZSIsImVsZUNsYXNzIiwiaXRlbUluZGV4IiwicGFyZW50Tm9kZSIsIm1hcEl0ZW1BY3RpZVN0eWxlIiwiZGlzcGxheSIsIml0ZW0iLCJkYXRhLWtleSIsIkZpbHRlck9wdGlvbiIsIm9wdGlvbkVsZW1lbnQiLCJvcHRpb25WYWx1ZSIsInNlbGVjdCIsImlzTXVsdGlTZWxlY3QiLCJwcmV2ZW50RGVmYXVsdCIsIm9uU2VsZWN0Iiwib3B0aW9uVmFsdWVFbGVtZW50IiwiaHJlZiIsImh0bWxGb3IiLCJGaWx0ZXJBY3Rpb24iLCJtdWx0aVRvZ2dsZVN0YXR1cyIsIm11bHRpVG9nZ2xlIiwiZXhwYW5kVG9nZ2xlIiwiZXhwYW5kVG9nZ2xlU3RhdHVzIiwiRmlsdGVyU3RhdGVUYWciLCJ0YWdWYWx1ZU5vZGVzIiwicmVtb3ZlVGFnIiwib25UYWdSZW1vdmUiLCJjdXJyU3RhdGVWYWx1ZXMiLCJBcnJheSIsImlzQXJyYXkiLCJ2YWx1ZXMiLCJ0cmVlVmlldyIsIkZpbHRlclN0YXRlQmFyIiwiZmlsdGVyU3RhdGUiLCJzdGF0ZVRhZ05vZGVzIiwiT2JqZWN0Iiwia2V5cyIsImZpZWxkIiwiZGVmIiwiZ2V0RmlsdGVyRGVmIiwib25TdGF0ZURlbGV0ZSIsIkZpbHRlciIsImlzRXhwYW5kZWQiLCJtdWx0aVNlbGVjdGVkIiwiY2FuTXVsdGlTZWxlY3QiLCJvcHRpb25zIiwibXVsdGlTZWxlY3RUb2dnbGUiLCJ1cGRhdGVNdWx0aVNlbGVjdGVkIiwiY29uZmlybU11bHRpU2VsZWN0Iiwic2VsZWN0ZWRPYmoiLCJzZWxlY3RlZEFyciIsImhhc093blByb3BlcnR5IiwicHVzaCIsIm9uU2VsZWN0T3B0aW9uIiwiaGFuZGxlU2VsZWN0Iiwib3B0aW9uTm9kZXMiLCJvcHRpb24iLCJGaWx0ZXJHcm91cCIsImZpbHRlclZhbHVlcyIsIm9uU3RhdGVDaGFuZ2UiLCJkZWZzIiwiZmlsdGVyRGVmcyIsInJlZHVjZSIsImZpbHRlckRlZiIsImRlZkluZGV4IiwidXBkYXRlRmlsdGVyVmFsdWUiLCJzZXRGaWx0ZXJTdGF0ZSIsImFkZEZpbHRlclN0YXRlIiwidGhhdCIsImNoYW5nZWQiLCJoYXNWYWx1ZSIsImluZGV4T2ZUcmVlIiwiZmluZEluZGV4IiwiaXNTYW1lTGV2ZWwiLCJjdXJyZW50U3RhdGUiLCJzbGljZSIsInBvcCIsImlzU2FtZVN0YXRlIiwicmVtb3ZlRmlsdGVyU3RhdGUiLCJvIiwibiIsImlzRW1wdHlPYmoiLCJldmVyeSIsIm9TdGF0ZSIsImlzU2FtZVZhbHVlQXJyYXkiLCJvQXJyIiwibkFyciIsIm9iaiIsImFyciIsImZpbHRlck5vZGVzIiwiUGFnaW5hdGlvbkJ0biIsInRleHQiLCJpdGVtQ2xhc3MiLCJhY3RpdmUiLCJkaXNhYmxlZCIsImNoYW5nZVBhZ2UiLCJQYWdpT3ZlcnZpZXciLCJwYWdlcyIsIlBhZ2lRdWlja0dvIiwicGFnZUlucHV0IiwiaW5wdXRDaGFuZ2UiLCJxdWlja0dvIiwibmV4dFBhZ2UiLCJzZXRBY3RpdmVQYWdlIiwibWluIiwibWF4IiwiUGFnaU1haW4iLCJwYWdlSXRlbXMiLCJnZXRQYWdlSXRlbXMiLCJhY3RpdmVQYWdlIiwic2VsZWN0ZWQiLCJoYW5kbGVJdGVtQ2xpY2siLCJsaXN0IiwiYiIsImJhc2VQYWdlcyIsIm0iLCJtaWRQYWdlcyIsInAiLCJfZ2V0U2VyaWVzTnVtYmVyIiwiY29uY2F0Iiwic3RhcnQiLCJzZXJpZXMiLCJzdGFydEJsb2NrIiwiZW5kQmxvY2siLCJmaXJzdCIsInByZXYiLCJuZXh0IiwibGFzdCIsIlBhZ2luYXRpb24iLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJudW1iZXIiLCJlbGxpcHNpcyIsInBhZ2lDbGFzcyIsIlNwaW5uZXIiLCJib3JkZXJDb2xvciIsImJvcmRlckxlZnRDb2xvciIsIlByb2dyZXNzQmFyIiwicmF0ZSIsImRvbmUiLCJzcGVlZCIsInNwaW5uZXIiLCJlYXNpbmciLCJtYXhSYXRlIiwiaW5jU3RlcCIsIm1pblN0ZXAiLCJtYXhTdGVwIiwidHJpY2tsZSIsInRyaWNrbGVTcGVlZCIsInNldFRyaWNrbGUiLCJfaW5pdCIsInNldCIsIl9hdXRvSW5jIiwiX2Zvcm1hdCIsImluYyIsIm5ld1JhdGUiLCJzZXRUaW1lb3V0IiwicHJvcyIsInBhcnNlRmxvYXQiLCJ0aW1lciIsIl9jbGVhckludGVydmFsIiwicmFuZG9tIiwic2V0SW50ZXJ2YWwiLCJfZ2V0UmFkb21TdGVwIiwiY2xlYXJJbnRlcnZhbCIsIk1hdGgiLCJwcm9ncmVzc1N0eWxlIiwib3BhY2l0eSIsInRyYW5zaXRpb24iLCJiYXJTdHlsZSIsImJveFNoYWRvd0NvbG9yIiwiVG9vbFRpcCIsInRpcCIsInRyaWdnZXIiLCJkZWxheSIsImhvdmVyYWJsZSIsInBvc2l0aW9uIiwiYUhyZWYiLCJpc0FjdGl2ZSIsImlzT25UaXAiLCJ0aXBIZWlnaHQiLCJoYW5kbGVNb3VzZU92ZXIiLCJoYW5kbGVNb3VzZU91dCIsImhhbmRsZVRpcE1vdXNlT3ZlciIsImhhbmRsZVRpcE1vdXNlT3V0IiwiY29tcG9uZW50RGlkVXBkYXRlIiwic2V0VGlwUG9zaXRpb24iLCJyZWZzIiwiZmxhZyIsIm9mZnNldEhlaWdodCIsInRpcFdpZHRoIiwib2Zmc2V0V2lkdGgiLCJjb250V2lkdGgiLCJjb250SGVpZ2h0IiwidG9wIiwibGVmdCIsImJvdHRvbSIsImhlaWdodCIsInByZXZlcnRUaXBPdmVyZmxvdyIsInRpcFgiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJhdmFpbFdpZHRoIiwiZG9jdW1lbnQiLCJib2R5IiwiY2xpZW50V2lkdGgiLCJnZXRUaXBTdHlsZSIsInJlZiIsIm9uTW91c2VPdmVyIiwib25Nb3VzZU91dCJdLCJtYXBwaW5ncyI6IkFBQ0EsR0FBSUEsYUFBQUMsTUFBQUMsYUFBaUNDLFlBQUEsY0FDakNDLGdCQUFpQixXQUNiLE9BQ0lDLFdBQVksS0FDWkMsWUFBWSxJQUdwQkMsZUFBZ0IsV0FDWkMsS0FBS0MsVUFBVUgsWUFBYUUsS0FBS0UsTUFBTUosY0FFM0NLLG9CQUFxQixTQUFTQyxHQUMxQkosS0FBS0MsVUFBVUosV0FBWU8sRUFBU04sWUFBWSxJQUM3Q0UsS0FBS0ssTUFBTUMsU0FDVk4sS0FBS0ssTUFBTUMsUUFBUUYsSUFHM0JHLE9BQVEsV0FDSixNQUNJZCxPQUFBZSxjQUFBLE9BQUlDLFVBQUMsZUFDRGhCLE1BQUFlLGNBQUNFLG1CQUFpQkMsY0FBQ1gsS0FBZUUsTUFBS0osV0FBZ0JjLFFBQUVaLEtBQVNELGdCQUM3REMsS0FBS0UsTUFBTUwsV0FBV0csS0FBS0UsTUFBTUwsV0FBV0csS0FBS0ssTUFBTVEsY0FFM0RiLEtBQUtFLE1BQU1KLFdBQ1JMLE1BQUFlLGNBQUNNLGFBQVdDLFlBQUNmLEtBQWFLLE1BQUtVLFlBQWlCRixhQUFFYixLQUFjSyxNQUFL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IjoiQ2hhcm0tVUkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyDmlbTkvZPnu4Tku7ZcbnZhciBBZGRyZXNzTGlzdCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbm93QWRkcmVzczogbnVsbCxcbiAgICAgICAgICAgIGlzV3JhcFNob3c6IGZhbHNlXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBoYW5kbGVCdG5DbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2lzV3JhcFNob3c6ICF0aGlzLnN0YXRlLmlzV3JhcFNob3d9KTtcbiAgICB9LFxuICAgIGhhbmRsZVNlbGVjdEFkZHJlc3M6IGZ1bmN0aW9uKHNlbGVjdEN0KSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe25vd0FkZHJlc3M6IHNlbGVjdEN0LGlzV3JhcFNob3c6IGZhbHNlfSk7XG4gICAgICAgIGlmKHRoaXMucHJvcHMuc2V0Q2l0eSkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5zZXRDaXR5KHNlbGVjdEN0KTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQWRkcmVzc0xpc3RcIj5cbiAgICAgICAgICAgICAgICA8QWRkcmVzc0Ryb3BCdXR0b24gdHJpYW5nbGVTdGF0ZT17dGhpcy5zdGF0ZS5pc1dyYXBTaG93fSBvbkNsaWNrPXt0aGlzLmhhbmRsZUJ0bkNsaWNrfT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUubm93QWRkcmVzcz90aGlzLnN0YXRlLm5vd0FkZHJlc3M6dGhpcy5wcm9wcy5sb2NhbEFkZHJlc3N9XG4gICAgICAgICAgICAgICAgPC9BZGRyZXNzRHJvcEJ1dHRvbj5cbiAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5pc1dyYXBTaG93P1xuICAgICAgICAgICAgICAgICAgICA8QWRkcmVzc1dyYXAgYWRkcmVzc0RhdGE9e3RoaXMucHJvcHMuYWRkcmVzc0RhdGF9IGxvY2FsQWRkcmVzcz17dGhpcy5wcm9wcy5sb2NhbEFkZHJlc3N9IGhhbmRsZVNlbGVjdEFkZHJlc3M9e3RoaXMuaGFuZGxlU2VsZWN0QWRkcmVzc30vPlxuICAgICAgICAgICAgICAgICAgICA6bnVsbFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyDkuIvmi4nmjInpkq5cbnZhciBBZGRyZXNzRHJvcEJ1dHRvbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBoYW5kbGVDbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25DbGljaygpO1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiQWRkcmVzc0Ryb3BCdXR0b25cIiBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfT5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e1widHJpYW5nbGUgXCIrdGhpcy5wcm9wcy50cmlhbmdsZVN0YXRlfT48L3NwYW4+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5Zyw5Z2A5pON5L2c5qGG5a655ZmoXG52YXIgQWRkcmVzc1dyYXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQWRkcmVzc1dyYXBcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFkZHJlc3NDb250XCI+XG4gICAgICAgICAgICAgICAgICAgIDxBZGRyZXNzTG9jYXRpb24gbG9jYWxBZGRyZXNzPXt0aGlzLnByb3BzLmxvY2FsQWRkcmVzc30gaGFuZGxlU2VsZWN0QWRkcmVzcz17dGhpcy5wcm9wcy5oYW5kbGVTZWxlY3RBZGRyZXNzfSAvPlxuICAgICAgICAgICAgICAgICAgICA8QWRkcmVzc1NlYXJjaElucHV0IGFkZHJlc3NEYXRhPXt0aGlzLnByb3BzLmFkZHJlc3NEYXRhfSBoYW5kbGVTZWxlY3RBZGRyZXNzPXt0aGlzLnByb3BzLmhhbmRsZVNlbGVjdEFkZHJlc3N9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxBZGRyZXNzTGlzdFdyYXAgYWRkcmVzc0RhdGE9e3RoaXMucHJvcHMuYWRkcmVzc0RhdGF9IGhhbmRsZVNlbGVjdEFkZHJlc3M9e3RoaXMucHJvcHMuaGFuZGxlU2VsZWN0QWRkcmVzc30gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyDlrprkvY3lvZPliY3lnLDlnYBcbnZhciBBZGRyZXNzTG9jYXRpb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnByb3BzLmhhbmRsZVNlbGVjdEFkZHJlc3ModGhpcy5wcm9wcy5sb2NhbEFkZHJlc3MpO1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQWRkcmVzc0xvY2F0aW9uXCI+XG4gICAgICAgICAgICAgICAg54yc5L2g5Zyo77yaPHNwYW4gb25DbGljaz17dGhpcy5oYW5kbGVDbGlja30+e3RoaXMucHJvcHMubG9jYWxBZGRyZXNzfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyDlnLDlnYDmkJzntKJcbnZhciBBZGRyZXNzU2VhcmNoSW5wdXQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlc3VsdDogW10sXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBoYW5kbGVSZXN1bHRDbGljazogZnVuY3Rpb24oZSkge1xuICAgICAgICB2YXIgYWRkcmVzcyA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YScpO1xuICAgICAgICB0aGlzLnByb3BzLmhhbmRsZVNlbGVjdEFkZHJlc3MoYWRkcmVzcyk7XG4gICAgfSxcbiAgICBoYW5kbGVTZWFyY2g6IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHZhciBjb250ID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgICAgICB2YXIgbGVuID0gY29udC5sZW5ndGg7XG4gICAgICAgIHZhciBhZGRyZXNzRGF0YSA9IHRoaXMucHJvcHMuYWRkcmVzc0RhdGE7XG4gICAgICAgIC8vIOWIpOaWreaYr+axieWtl+i/mOaYr+aLvOmfs1xuICAgICAgICB2YXIgcmVnPS9eW1xcdTRFMDAtXFx1OUZBNV0rJC87XG4gICAgICAgIGlmKHJlZy50ZXN0KGNvbnQpKSB7XG4gICAgICAgICAgICAvLyDmmK/msYnlrZflpITnkIZcbiAgICAgICAgICAgIHZhciBfcmVzdWx0SCA9IFtdO1xuICAgICAgICAgICAgdmFyIGogPSAwO1xuICAgICAgICAgICAgZm9yKHZhciBrZXlIIGluIGFkZHJlc3NEYXRhKSB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBrZXlIUyBpbiBhZGRyZXNzRGF0YVtrZXlIXSkge1xuICAgICAgICAgICAgICAgICAgICBpZihhZGRyZXNzRGF0YVtrZXlIXVtrZXlIU10uY2l0eS5zdWJzdHJpbmcoMCxsZW4pID09IGNvbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9yZXN1bHRIW2pdICA9IGFkZHJlc3NEYXRhW2tleUhdW2tleUhTXS5jaXR5O1xuICAgICAgICAgICAgICAgICAgICAgICAgaisrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7cmVzdWx0OiBfcmVzdWx0SH0pO1xuICAgICAgICAgICAgcmV0dXJuIDtcbiAgICAgICAgfVxuICAgICAgICAvLyDmmK/mi7zpn7NcbiAgICAgICAgdmFyIEZMID0gY29udC5zdWJzdHJpbmcoMCwxKS50b0xvY2FsZVVwcGVyQ2FzZSgpO1xuICAgICAgICB2YXIgcmVzdWx0RkwgPSBhZGRyZXNzRGF0YVtGTF07XG4gICAgICAgIHZhciBfcmVzdWx0ID0gW107XG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgZm9yKHZhciBrZXkgaW4gcmVzdWx0RkwpIHtcbiAgICAgICAgICAgIGlmKGtleS5zdWJzdHJpbmcoMCxsZW4pID09IGNvbnQudG9Mb2NhbGVMb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIF9yZXN1bHRbaV0gID0gcmVzdWx0Rkxba2V5XS5jaXR5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3Jlc3VsdDogX3Jlc3VsdH0pO1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIF9oYW5kbGVSZXN1bHRDbGljayA9IHRoaXMuaGFuZGxlUmVzdWx0Q2xpY2s7XG4gICAgICAgIHZhciByZXN1bHROb2RlcyA9IHRoaXMuc3RhdGUucmVzdWx0Lm1hcChmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaSBkYXRhPXtyZXN1bHR9IG9uQ2xpY2s9e19oYW5kbGVSZXN1bHRDbGlja30+e3Jlc3VsdH08L2xpPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFkZHJlc3NTZWFyY2hcIj5cbiAgICAgICAgICAgICAgICDnm7TmjqXmkJzntKJcbiAgICAgICAgICAgICAgICA8aW5wdXQgb25DaGFuZ2U9e3RoaXMuaGFuZGxlU2VhcmNofSBwbGFjZWhvbGRlcj1cIuivt+i+k+WFpeWfjuW4guWQjVwiIC8+XG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cIkFkZHJlc3NTZWFyY2hSZXN1bHRcIj5cbiAgICAgICAgICAgICAgICAgICAge3Jlc3VsdE5vZGVzfVxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5Zyw5Z2A5YiX6KGo5a655ZmoXG52YXIgQWRkcmVzc0xpc3RXcmFwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhZGRyZXNzRGF0YSA9IHRoaXMucHJvcHMuYWRkcmVzc0RhdGE7XG4gICAgICAgIHZhciBoYW5kbGVTZWxlY3RBZGRyZXNzID0gdGhpcy5wcm9wcy5oYW5kbGVTZWxlY3RBZGRyZXNzO1xuICAgICAgICB2YXIgcm93Tm9kZXMgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICB2YXIgY29udCA9IFtdO1xuICAgICAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gZGF0YSkge1xuICAgICAgICAgICAgICAgIGNvbnRbaV0gID0gPEFkZHJlc3NMaXN0Um93IGtleT17a2V5fSBrZXlEYXRhPXtrZXl9IGRhdGE9e2RhdGFba2V5XX0gaGFuZGxlU2VsZWN0QWRkcmVzcz17aGFuZGxlU2VsZWN0QWRkcmVzc30gLz47XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnQ7XG4gICAgICAgIH0oYWRkcmVzc0RhdGEpO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJBZGRyZXNzTGlzdFdyYXBcIj5cbiAgICAgICAgICAgICAgICB7cm93Tm9kZXN9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLy8g5Zyw5Z2A5YiX6KGo6KGMXG52YXIgQWRkcmVzc0xpc3RSb3cgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgdmFyIGFkZHJlc3MgPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEnKTtcbiAgICAgICAgdGhpcy5wcm9wcy5oYW5kbGVTZWxlY3RBZGRyZXNzKGFkZHJlc3MpO1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGhhbmRsZUNsaWNrID0gdGhpcy5oYW5kbGVDbGljaztcbiAgICAgICAgdmFyIGRhdGFOb2RlcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIHZhciBjb250ID0gW107XG4gICAgICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgICAgICBmb3IodmFyIGtleSBpbiBkYXRhKSB7XG4gICAgICAgICAgICAgICAgY29udFtpXSAgPSA8c3BhbiBrZXk9e1wicFwiK2tleX0+PHNwYW4gZGF0YT17ZGF0YVtrZXldLmNpdHl9IGtleT17aX0gIG9uQ2xpY2s9e2hhbmRsZUNsaWNrfSA+e2RhdGFba2V5XS5jaXR5fTwvc3Bhbj48L3NwYW4+O1xuICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb250O1xuICAgICAgICB9KHRoaXMucHJvcHMuZGF0YSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFkZHJlc3NMaXN0Um93XCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwia2V5RGF0YVwiPnt0aGlzLnByb3BzLmtleURhdGF9PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImRhdGFXcmFwXCI+e2RhdGFOb2Rlc308L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0J1xuXG4vLyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICBJbmNsdWRlOiBBZGRyZXNzTGlzdCBBZGRyZXNzU2VhcmNoXG4vL1xuLy8gIFRPRE86XG4vLyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIEFkZHJlc3NQaWNrZXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNpdHk6IFwi5YyX5LqsXCIsXG4gICAgICBjdXJyZW50Q2l0eTogbnVsbCxcbiAgICAgIGFkZHJlc3M6IHRoaXMucHJvcHMua2V5d29yZFxuICAgIH07XG4gIH0sXG4gIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9LFxuICBjb21wb25lbnRXaWxsTW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBteUNpdHkgPSBuZXcgQk1hcC5Mb2NhbENpdHkoKTtcbiAgICBteUNpdHlcbiAgICAgIC5nZXQoZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIHZhciBjdXJyZW50Q2l0eSA9IHJlcy5uYW1lO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGN1cnJlbnRDaXR5OiBjdXJyZW50Q2l0eSxcbiAgICAgICAgICAgIGNpdHk6IGN1cnJlbnRDaXR5XG4gICAgICAgIH0pO1xuICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgfSxcbiAgc2V0QWRkcmVzczogZnVuY3Rpb24oYWQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGFkZHJlc3M6IGFkXG4gICAgfSk7XG4gIH0sXG4gIHNldENpdHk6IGZ1bmN0aW9uKGN0KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBjaXR5OiBjdFxuICAgIH0pO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhZGRyZXNzUGlja2VyQWN0aXZlU3R5bGUgPSB0aGlzLnN0YXRlLmFkZHJlc3NcbiAgICAgID8gdGhpcy5wcm9wcy5hZGRyZXNzUGlja2VyQWN0aXZlU3R5bGVcbiAgICAgIDoge307XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWRkcmVzcy1waWNrZXJcIiBzdHlsZT17YWRkcmVzc1BpY2tlckFjdGl2ZVN0eWxlfT5cbiAgICAgICAgPEFkZHJlc3NMaXN0IHNldENpdHk9e3RoaXMuc2V0Q2l0eX0gbG9jYWxBZGRyZXNzPXt0aGlzLnN0YXRlLmN1cnJlbnRDaXR5fSBhZGRyZXNzRGF0YT17dGhpcy5wcm9wcy5hZGRyZXNzRGF0YX0vPlxuICAgICAgICA8QWRkcmVzc0lucHV0IHsuLi50aGlzLnByb3BzfSBjaXR5PXt0aGlzLnN0YXRlLmNpdHl9IHNlYXJjaFN1Ym1pdEhhbmRsZXI9e3RoaXMuc2V0QWRkcmVzc30vPlxuICAgICAgICA8QWRkcmVzc01hcCBhZGRyZXNzS2V5d29yZD17dGhpcy5zdGF0ZS5hZGRyZXNzfSBjaXR5PXt0aGlzLnN0YXRlLmNpdHl9IHRoZW1lPXt0aGlzLnByb3BzLnRoZW1lfSBsYnM9e3RoaXMucHJvcHMubGJzfSAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCdcblxuLy8gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAgSW5jbHVkZTogQWRkcmVzc0lucHV0IEFkZHJlc3NNYXBcbi8vXG4vLyAgVE9ETzogW2FkZF0g5aKe5Yqg5ZCE6aG55Y+C5pWwXG4vLyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyogQWRkcmVzc1NlYXJjaCAqL1xudmFyIEFkZHJlc3NTZWFyY2ggPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFkZHJlc3M6IG51bGxcbiAgICB9O1xuICB9LFxuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbnB1dFdpZHRoOiA0MDAsXG4gICAgICBpbnB1dFRpcDogXCLovpPlhaXmg7PopoHmkJzntKLnmoTlnLDlnYBcIixcbiAgICAgIHNlYXJjaEJ0blRleHQ6IFwi5pCc57SiXCIsXG4gICAgICBjaXR5OiBcIuWMl+S6rFwiLFxuICAgICAgdGhlbWU6IFwiZGFya1wiXG4gICAgfVxuICB9LFxuICBjb21wb25lbnRXaWxsTW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBteUNpdHkgPSBuZXcgQk1hcC5Mb2NhbENpdHkoKTtcbiAgICBteUNpdHlcbiAgICAgIC5nZXQoZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIHZhciBjdXJyZW50Q2l0eSA9IHJlcy5uYW1lO1xuICAgICAgICB0aGlzLnNldENpdHkoY3VycmVudENpdHkpO1xuICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgfSxcbiAgc2V0QWRkcmVzczogZnVuY3Rpb24oYWQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGFkZHJlc3M6IGFkXG4gICAgfSk7XG4gIH0sXG4gIHNldENpdHk6IGZ1bmN0aW9uKGN0KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBjaXR5OiBjdFxuICAgIH0pO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImFkZHJlc3Mtc2VhcmNoXCI+XG4gICAgICAgIDxBZGRyZXNzSW5wdXQgey4uLnRoaXMucHJvcHN9IHNlYXJjaFN1Ym1pdEhhbmRsZXI9e3RoaXMuc2V0QWRkcmVzc30gLz5cbiAgICAgICAgPEFkZHJlc3NNYXAgYWRkcmVzc0tleXdvcmQ9e3RoaXMuc3RhdGUuYWRkcmVzc30gY2l0eT17dGhpcy5wcm9wcy5jaXR5fSB0aGVtZT17dGhpcy5wcm9wcy50aGVtZX0gLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn0pO1xuXG4vKiBBZGRyZXNzSW5wdXQgKi9cbnZhciBBZGRyZXNzSW5wdXQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGtleXdvcmQ6IHRoaXMucHJvcHMua2V5d29yZFxuICAgIH07XG4gIH0sXG4gIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlucHV0V2lkdGg6IDQwMCxcbiAgICAgIGlucHV0VGlwOiBcIui+k+WFpeaDs+imgeaQnOe0oueahOWcsOWdgFwiLFxuICAgICAgc2VhcmNoQnRuVGV4dDogXCLmkJzntKJcIixcbiAgICAgIGNpdHk6IFwi5YyX5LqsXCIsXG4gICAgICB0aGVtZTogXCJsaWdodFwiXG4gICAgfVxuICB9LFxuICBzZWFyY2hTdWJtaXQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBrZXl3b3JkID0gdGhpcy5nZXRET01Ob2RlKClcbiAgICAgIC5jaGlsZHJlblswXVxuICAgICAgLnZhbHVlO1xuICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTtcbiAgICB0aGlzLnByb3BzXG4gICAgICAuc2VhcmNoU3VibWl0SGFuZGxlcihrZXl3b3JkKTtcbiAgICBzZXRDb29raWUoJ3NlYXJjaEtleXdvcmQnLCBrZXl3b3JkLCBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyAzMCkpO1xuICB9LFxuICBjaGVja0VudGVyOiBmdW5jdGlvbihlKSB7XG4gICAgKGUua2V5Q29kZSA9PT0gMTMpICYmIHRoaXMuc2VhcmNoU3VibWl0KCk7XG4gIH0sXG4gIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgbWFwQXV0b0NvbXBsZXRlID0gbmV3IEJNYXAuQXV0b2NvbXBsZXRlKHtcbiAgICAgIFwiaW5wdXRcIjogXCJfYWRkcmVzc1NlYXJjaEtleXdvcmRcIixcbiAgICAgIFwibG9jYXRpb25cIjogdGhpcy5wcm9wcy5jaXR5XG4gICAgfSk7XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGtleXdvcmRTdHlsZSA9IHtcbiAgICAgIHdpZHRoOiB0aGlzLnByb3BzLmlucHV0V2lkdGhcbiAgICB9O1xuICAgIHZhciBjb25DbGFzc05hbWUgPSBcImFkZHJlc3MtaW5wdXRcIjtcbiAgICBzd2l0Y2ggKHRoaXMucHJvcHMudGhlbWUpIHtcbiAgICBjYXNlICdsaWdodCcgOlxuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZGFyaycgOlxuICAgICAgY29uQ2xhc3NOYW1lICs9IFwiIGRhcmtcIjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQgOlxuXG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y29uQ2xhc3NOYW1lfT5cbiAgICAgICAgPGlucHV0IGNsYXNzTmFtZT1cImlucHV0LWtleXdvcmRcIiBpZD1cIl9hZGRyZXNzU2VhcmNoS2V5d29yZFwiIG9uS2V5VXA9e3RoaXMuY2hlY2tFbnRlcn0gcGxhY2Vob2xkZXI9e3RoaXMuc3RhdGUua2V5d29yZCB8fCB0aGlzLnByb3BzLmlucHV0VGlwfSBzdHlsZT17a2V5d29yZFN0eWxlfT48L2lucHV0PlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImlucHV0LWNvbW1pdFwiIG9uQ2xpY2s9e3RoaXMuc2VhcmNoU3VibWl0fT57dGhpcy5wcm9wcy5zZWFyY2hCdG5UZXh0fTwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG5cbi8qIEFkZHJlc3NNYXAgKi9cbnZhciBBZGRyZXNzTWFwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBtYXBMb2NhbE9iajogbnVsbCxcbiAgICAgIGl0ZW1zTnVtYmVyOiAwLFxuICAgICAgaXRlbXNMaXN0OiBbXSxcbiAgICAgIGl0ZW1BY3RpdmU6IDBcbiAgICB9O1xuICB9LFxuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0aGVtZTogXCJsaWdodFwiXG4gICAgfVxuICB9LFxuICBjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5tYXAgPSBuZXcgQk1hcC5NYXAoXCJfYWRkcmVzc01hcE1haW5cIiwge1xuICAgICAgZW5hYmxlTWFwQ2xpY2s6IGZhbHNlXG4gICAgfSk7XG4gICAgdGhpcy5tYXBcbiAgICAgIC5jZW50ZXJBbmRab29tKHRoaXMucHJvcHMuY2l0eSwgMTIpO1xuICB9LFxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzOiBmdW5jdGlvbihuZXh0UHJvcHMpIHtcbiAgICBuZXh0UHJvcHMuYWRkcmVzc0tleXdvcmQgJiYgdGhpcy5nZXROZWFyYnkobmV4dFByb3BzLmFkZHJlc3NLZXl3b3JkKTtcbiAgfSxcbiAgZ2V0TmVhcmJ5OiBmdW5jdGlvbihrZXl3b3JkLCBwYWdlKSB7XG4gICAgLy8g5Zyw5Z2A6Kej5p6Q6I635Y+W57uP57qs5bqmXG4gICAgdmFyIG15R2VvID0gbmV3IEJNYXAuR2VvY29kZXIoKTtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgIG15R2VvXG4gICAgICAuZ2V0UG9pbnQoa2V5d29yZCwgZnVuY3Rpb24ocG9pbnQpIHsgLy8g6Kej5p6Q5oiQ5Yqf5ZCO55qE5Zue6LCDIOaQnOe0ouS/oeaBr1xuICAgICAgICBpZiAocG9pbnQpIHtcbiAgICAgICAgICBteUdlby5nZXRMb2NhdGlvbihwb2ludCwgZnVuY3Rpb24oZ2VvKSB7XG4gICAgICAgICAgICBpZihfdGhpcy5jb21wYXJlQ2l0eShnZW8uYWRkcmVzc0NvbXBvbmVudHMuY2l0eSwgX3RoaXMucHJvcHMuY2l0eSkpIHtcbiAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnZ2V0JyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwOi8vYXBpLm1hcC5iYWlkdS5jb20vZ2Vvc2VhcmNoL3YzL25lYXJieScsXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvbnBcIixcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICBhazogX3RoaXMucHJvcHMubGJzLmFrLFxuICAgICAgICAgICAgICAgICAgZ2VvdGFibGVfaWQ6IF90aGlzLnByb3BzLmxicy5nZW90YWJsZUlkLFxuICAgICAgICAgICAgICAgICAgbG9jYXRpb246IHBvaW50LmxuZyArICcsJyArIHBvaW50LmxhdCxcbiAgICAgICAgICAgICAgICAgIHJhZGl1czogX3RoaXMucHJvcHMubGJzLnJhZGl1cyxcbiAgICAgICAgICAgICAgICAgIHRhZ3M6IF90aGlzLnByb3BzLmxicy50YWdzLFxuICAgICAgICAgICAgICAgICAgc29ydGJ5OiBfdGhpcy5wcm9wcy5sYnMuc29ydGJ5LFxuICAgICAgICAgICAgICAgICAgcGFnZV9pbmRleDogX3RoaXMucHJvcHMubGJzLnBhZ2UgfHwgMCxcbiAgICAgICAgICAgICAgICAgIGZpbHRlcjogX3RoaXMucHJvcHMubGJzLmZpbHRlcixcbiAgICAgICAgICAgICAgICAgIHBhZ2Vfc2l6ZTogNTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGpzb25wOiAnY2FsbGJhY2snLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBpdGVtc051bWJlcjogcmVzLnRvdGFsLFxuICAgICAgICAgICAgICAgICAgICBpdGVtc0xpc3Q6IHJlcy5jb250ZW50c1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICBfdGhpcy5zaG93TmVhcmJ5KCk7XG4gICAgICAgICAgICAgICAgICBfdGhpcy5tYXBcbiAgICAgICAgICAgICAgICAgICAgLmNlbnRlckFuZFpvb20oX3RoaXMucHJvcHMuYWRkcmVzc0tleXdvcmQsIDEyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBfdGhpcy5ub0l0ZW1zVG9TaG93KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMubm9JdGVtc1RvU2hvdygpO1xuICAgICAgICB9XG4gICAgICB9LmJpbmQodGhpcyksIHRoaXMucHJvcHMuY2l0eSk7XG4gIH0sXG4gIGNvbXBhcmVDaXR5OiBmdW5jdGlvbihjdDEsIGN0Mikge1xuICAgIHJldHVybiBjdDEucmVwbGFjZSgv5biCJC8sJycpID09PSBjdDIucmVwbGFjZSgv5biCJC8sJycpO1xuICB9LFxuICBub0l0ZW1zVG9TaG93OiBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygn5pqC5peg5ZWG5a62Jyk7XG4gIH0sXG4gIHNob3dOZWFyYnk6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgZm9yICh2YXIgayBpbiB0aGlzLnN0YXRlLml0ZW1zTGlzdCkge1xuICAgICAgdmFyIHBvaW50ID0gbmV3IEJNYXAuUG9pbnQodGhpcy5zdGF0ZS5pdGVtc0xpc3Rba10ubG9jYXRpb25bMF0sIHRoaXMuc3RhdGUuaXRlbXNMaXN0W2tdLmxvY2F0aW9uWzFdKTtcbiAgICAgIHZhciBtYXJrZXIgPSBuZXcgQk1hcC5NYXJrZXIocG9pbnQpO1xuICAgICAgdmFyIGxhYmVsID0gbmV3IEJNYXAuTGFiZWwoU3RyaW5nLmZyb21DaGFyQ29kZSg2NSArIHBhcnNlSW50KGspKSwge1xuICAgICAgICBvZmZzZXQ6IG5ldyBCTWFwLlNpemUoNCwgMilcbiAgICAgIH0pO1xuICAgICAgbGFiZWwuc2V0U3R5bGUoe1xuICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBjb2xvcjogJyNGQUZBRkEnXG4gICAgICB9KTtcbiAgICAgIG1hcmtlci5zZXRMYWJlbChsYWJlbCk7XG4gICAgICBtYXJrZXIuc2V0VGl0bGUodGhpcy5zdGF0ZS5pdGVtc0xpc3Rba10udGl0bGUpO1xuICAgICAgbWFya2VyXG4gICAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBfdGhpcy5zaG93SW5mb1dpbmRvdyh0aGlzLmdldExhYmVsKCkuY29udGVudC5jaGFyQ29kZUF0KDApIC0gNjUpO1xuICAgICAgICB9KTtcbiAgICAgIHRoaXMubWFwXG4gICAgICAgIC5hZGRPdmVybGF5KG1hcmtlcik7XG4gICAgfVxuICAgIHRoaXMuc3RhdGUuaXRlbXNMaXN0Lmxlbmd0aCAmJiB0aGlzLnNob3dJbmZvV2luZG93KDApO1xuICB9LFxuICBzaG93SW5mb1dpbmRvdzogZnVuY3Rpb24oaW5kZXgpIHtcbiAgICBpZiAoaW5kZXggIT09IHRoaXMuc3RhdGUuaXRlbUFjdGl2ZSB8fCAxKSB7XG4gICAgICB2YXIgcG9pbnQgPSBuZXcgQk1hcC5Qb2ludCh0aGlzLnN0YXRlLml0ZW1zTGlzdFtpbmRleF0ubG9jYXRpb25bMF0sIHRoaXMuc3RhdGUuaXRlbXNMaXN0W2luZGV4XS5sb2NhdGlvblsxXSk7XG4gICAgICB2YXIgaXRlbUluZm8gPSB0aGlzLnN0YXRlLml0ZW1zTGlzdFtpbmRleF07XG4gICAgICB2YXIgdGl0bGUgPSBpdGVtSW5mby50aXRsZTtcbiAgICAgIHZhciBhZGRyZXNzID0gaXRlbUluZm8uYWRkcmVzcztcbiAgICAgIHZhciB0ZWwgPSBpdGVtSW5mby50ZWw7XG4gICAgICB2YXIgY29udGVudCA9ICc8cCBjbGFzcz1cIm1hcC1pbmZvLXdpbmRvd1wiPuWcsOWdgO+8micgKyBhZGRyZXNzICsgJzwvcD4nO1xuICAgICAgdmFyIGluZm9XaW5kb3cgPSBuZXcgQk1hcC5JbmZvV2luZG93KGNvbnRlbnQsIHtcbiAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICB3aWR0aDogMjkwLFxuICAgICAgICBwYW5lbDogXCJwYW5lbFwiLFxuICAgICAgICBlbmFibGVBdXRvUGFuOiB0cnVlLFxuICAgICAgICBvZmZzZXQ6IG5ldyBCTWFwLlNpemUoMCwgLTI1KVxuICAgICAgfSk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXRlbUFjdGl2ZTogKyBpbmRleFxuICAgICAgfSk7XG4gICAgICB0aGlzLm1hcFxuICAgICAgICAub3BlbkluZm9XaW5kb3coaW5mb1dpbmRvdywgcG9pbnQpO1xuICAgIH1cbiAgfSxcbiAgY2xpY2tNYXBJdGVtOiBmdW5jdGlvbihlKSB7XG4gICAgdmFyIGVsZSA9IGUudGFyZ2V0O1xuICAgIHZhciBlbGVDbGFzcyA9IGVsZS5nZXRBdHRyaWJ1dGUoJ2NsYXNzJyk7XG4gICAgdmFyIGl0ZW1JbmRleCA9IDA7XG4gICAgaWYgKGVsZUNsYXNzID09PSBcIm1hcC1pdGVtXCIpIHtcbiAgICAgIGl0ZW1JbmRleCA9IGVsZS5nZXRBdHRyaWJ1dGUoJ2RhdGEta2V5Jyk7XG4gICAgfSBlbHNlIGlmIChlbGVDbGFzcyA9PT0gXCJtYXAtaXRlbS1tYXJrXCIgfHwgZWxlQ2xhc3MgPT09IFwibWFwLWl0ZW0tbWFpblwiKSB7XG4gICAgICBpdGVtSW5kZXggPSBlbGUucGFyZW50Tm9kZVxuICAgICAgICAuZ2V0QXR0cmlidXRlKCdkYXRhLWtleScpO1xuICAgIH0gZWxzZSBpZiAoIWVsZUNsYXNzKSB7XG4gICAgICBpdGVtSW5kZXggPSBlbGUucGFyZW50Tm9kZVxuICAgICAgICAucGFyZW50Tm9kZVxuICAgICAgICAucGFyZW50Tm9kZVxuICAgICAgICAuZ2V0QXR0cmlidXRlKCdkYXRhLWtleScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpdGVtSW5kZXggPSBlbGUucGFyZW50Tm9kZVxuICAgICAgICAucGFyZW50Tm9kZVxuICAgICAgICAuZ2V0QXR0cmlidXRlKCdkYXRhLWtleScpO1xuICAgIH1cbiAgICB0aGlzLnNob3dJbmZvV2luZG93KGl0ZW1JbmRleCk7XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNvbkNsYXNzTmFtZSA9IFwiYWRkcmVzcy1tYXBcIjtcbiAgICBzd2l0Y2ggKHRoaXMucHJvcHMudGhlbWUpIHtcbiAgICBjYXNlICdsaWdodCcgOlxuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZGFyaycgOlxuICAgICAgY29uQ2xhc3NOYW1lICs9IFwiIGRhcmtcIjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQgOlxuXG4gICAgfVxuICAgIHZhciBtYXBJdGVtQWN0aWVTdHlsZSA9IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjMTgxMjExXCJcbiAgICB9O1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y29uQ2xhc3NOYW1lfSBzdHlsZT17e1xuICAgICAgICBkaXNwbGF5OiB0aGlzLnByb3BzLmFkZHJlc3NLZXl3b3JkXG4gICAgICAgICAgPyBcImJsb2NrXCJcbiAgICAgICAgICA6IFwibm9uZVwiXG4gICAgICB9fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXAtbmF2XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXAtbmF2LXRpdGxlXCI+XG4gICAgICAgICAgICDpmYTov5HmnIlcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1hcC1uYXYtbnVtYmVyXCI+XG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLml0ZW1zTnVtYmVyfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAg5a625L2T6aqM5bqXXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPHVsIGNsYXNzTmFtZT1cIm1hcC1pdGVtc1wiIGlkPVwiX2FkZHJlc3NNYXBJdGVtc1wiIG9uQ2xpY2s9e3RoaXMuY2xpY2tNYXBJdGVtfT5cbiAgICAgICAgICAgIHt0aGlzLnN0YXRlLml0ZW1zTGlzdC5sZW5ndGggP1xuICAgICAgICAgICAgICB0aGlzLnN0YXRlLml0ZW1zTGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0sIGkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gPGxpIGNsYXNzTmFtZT1cIm1hcC1pdGVtXCIgZGF0YS1rZXk9e2l9IGtleT17aX0gc3R5bGU9eyhpID09PSB0aGlzLnN0YXRlLml0ZW1BY3RpdmUpXG4gICAgICAgICAgICAgICAgICA/IG1hcEl0ZW1BY3RpZVN0eWxlXG4gICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgIHt9fT5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1hcC1pdGVtLW1hcmtcIj57U3RyaW5nLmZyb21DaGFyQ29kZSg2NSArIGkpfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFwLWl0ZW0tbWFpblwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcC1pdGVtLXRpdGxlXCI+e2l0ZW0udGl0bGV9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFwLWl0ZW0tYWRkcmVzc1wiPuWcsOWdgO+8mntpdGVtLmFkZHJlc3N9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFwLWl0ZW0tdGVsXCI+55S16K+d77yae2l0ZW0udGVsfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9saT47XG4gICAgICAgICAgICAgIH0uYmluZCh0aGlzKSkgOlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5vLWl0ZW1zXCI+5oKo5omA5Zyo55qE5Z+O5biC55uu5YmN6L+Y5rKh5pyJ6K+l5a625YW355qE5L2T6aqM6aaG77yM5pWs6K+35pyf5b6FPC9kaXY+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFwLW1haW5cIiBpZD1cIl9hZGRyZXNzTWFwTWFpblwiPjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG4iLCJcbi8vICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIENvbXBvbmVudDogRmlsdGVyR3JvdXBcbi8vXG4vLyAgSW5jbHVkZTogRmlsdGVyIEZpbHRlck9wdGlvbiBGaWx0ZXJBY3Rpb24gRmlsdGVyU3RhdGVCYXIgRmlsdGVyU3RhdGVUYWdcbi8vXG4vLyAgVE9ETzpcbi8vICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKiDmr4/mnaHov4fmu6TlmajnmoTmr4/kuKrpgInpobkgKi9cbnZhciBGaWx0ZXJPcHRpb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHZhciBvcHRpb25WYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgLy8gdmFyIHNlbGVjdCA9IHRoaXMucHJvcHMub25TZWxlY3QuYmluZChudWxsLCBvcHRpb25WYWx1ZSk7XG4gICAgdmFyIHNlbGVjdCA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgIXRoaXMucHJvcHMuaXNNdWx0aVNlbGVjdCAmJiBldmVudCAmJiBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5wcm9wcy5vblNlbGVjdChvcHRpb25WYWx1ZSk7XG4gICAgfS5iaW5kKHRoaXMpO1xuICAgIHZhciBvcHRpb25FbGVtZW50O1xuICAgIHZhciBvcHRpb25WYWx1ZUVsZW1lbnQgPSA8c3Bhbj57b3B0aW9uVmFsdWUudmFsdWV9PC9zcGFuPjtcbiAgICBpZiAodGhpcy5wcm9wcy5pc011bHRpU2VsZWN0KSB7XG4gICAgICBvcHRpb25FbGVtZW50ID0gKFxuICAgICAgICA8bGFiZWwgaHJlZj1cIiNcIiBodG1sRm9yPXtvcHRpb25WYWx1ZS5uYW1lfT5cbiAgICAgICAgICA8aW5wdXQgb25DbGljaz17c2VsZWN0fSB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPXtvcHRpb25WYWx1ZS5uYW1lfSB2YWx1ZT17b3B0aW9uVmFsdWUudmFsdWV9IGlkPXtvcHRpb25WYWx1ZS52YWx1ZX0gLz5cbiAgICAgICAgICB7b3B0aW9uVmFsdWVFbGVtZW50fVxuICAgICAgICA8L2xhYmVsPlxuICAgICAgKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBvcHRpb25FbGVtZW50ID0gKFxuICAgICAgICA8YSBocmVmPVwiI1wiIG9uQ2xpY2s9e3NlbGVjdH0+XG4gICAgICAgICAge29wdGlvblZhbHVlRWxlbWVudH1cbiAgICAgICAgPC9hPlxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbkVsZW1lbnQ7XG4gIH1cbn0pO1xuXG4vKiDmr4/mnaHov4fmu6TlmajnmoTpop3lpJbmk43kvZwgKi9cbnZhciBGaWx0ZXJBY3Rpb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpbHRlci1hY3Rpb25cIj5cbiAgICAgICAgPGEgc3R5bGU9e3tkaXNwbGF5OiB0aGlzLnByb3BzLm11bHRpVG9nZ2xlU3RhdHVzID8gJ2lubGluZScgOiAnbm9uZSd9fVxuICAgICAgICAgIG9uQ2xpY2s9e3RoaXMucHJvcHMubXVsdGlUb2dnbGV9IGhyZWY9XCIjXCIgY2xhc3NOYW1lPVwibXVsdGktdG9nZ2xlXCI+5aSa6YCJPC9hPlxuICAgICAgICA8YSBvbkNsaWNrPXt0aGlzLnByb3BzLmV4cGFuZFRvZ2dsZX0gaHJlZj1cIiNcIj5cbiAgICAgICAgICB7dGhpcy5wcm9wcy5leHBhbmRUb2dnbGVTdGF0dXMgPyAn5pu05aSaJyA6ICfmlLbotbcnfVxuICAgICAgICA8L2E+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59KTtcblxuLyog54q25oCB5qCH562+ICovXG52YXIgRmlsdGVyU3RhdGVUYWcgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHZhciB0YWdWYWx1ZU5vZGVzO1xuICAgIHZhciByZW1vdmVUYWcgPSBmdW5jdGlvbiAodmFsdWUsIGV2ZW50KSB7XG4gICAgICBldmVudCAmJiBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5wcm9wcy5vblRhZ1JlbW92ZSh2YWx1ZSk7XG4gICAgfS5iaW5kKHRoaXMpO1xuICAgIHZhciBjdXJyU3RhdGVWYWx1ZXMgPSAgQXJyYXkuaXNBcnJheSh0aGlzLnByb3BzLnZhbHVlKSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudmFsdWUgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICBbdGhpcy5wcm9wcy52YWx1ZV07XG4gICAgdGFnVmFsdWVOb2RlcyA9IGN1cnJTdGF0ZVZhbHVlcy5tYXAoZnVuY3Rpb24gKHZhbHVlLCBpbmRleCwgdmFsdWVzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy50cmVlVmlldykge1xuICAgICAgICAvLyBzdGF0ZSDkuLogdHJlZVZpZXdcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8c3BhbiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgIHt2YWx1ZS52YWx1ZX0mbmJzcDtcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRhZy1yZW1vdmVcIj5cbiAgICAgICAgICAgICAgPGEgb25DbGljaz17cmVtb3ZlVGFnLmJpbmQodGhpcywgdmFsdWUpfSBocmVmPVwiI1wiPiZ0aW1lczs8L2E+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGluZGV4ID09IHZhbHVlcy5sZW5ndGggLSAxID9cbiAgICAgICAgICAgICAgICBudWxsIDpcbiAgICAgICAgICAgICAgICAoPHNwYW4+Jmd0Ozwvc3Bhbj4pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgLy8gc3RhdGUg5LiN5pivIHRyZWVWaWV3IOS9huWPr+iDveS4uuWkmumAieeKtuaAgVxuICAgICAgaWYgKGluZGV4ID09IHZhbHVlcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPHNwYW4ga2V5PXtpbmRleH0+XG4gICAgICAgICAgICB7dmFsdWUudmFsdWV9Jm5ic3A7XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0YWctcmVtb3ZlXCI+XG4gICAgICAgICAgICAgIDxhIG9uQ2xpY2s9e3JlbW92ZVRhZy5iaW5kKHRoaXMsIHZhbHVlKX0gaHJlZj1cIiNcIj4mdGltZXM7PC9hPlxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxzcGFuIGtleT17aW5kZXh9PlxuICAgICAgICAgICAge3ZhbHVlLnZhbHVlICsgJywnfSZuYnNwO1xuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9LmJpbmQodGhpcykpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlsdGVyLXRhZ1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhZy1uYW1lXCI+e3RoaXMucHJvcHMubmFtZSArICc6J30mbmJzcDs8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0YWctdmFsdWVcIj5cbiAgICAgICAgICB7dGFnVmFsdWVOb2Rlc31cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59KTtcblxuLyog54q25oCB5qCH562+5qCPICovXG52YXIgRmlsdGVyU3RhdGVCYXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHZhciBmaWx0ZXJTdGF0ZSA9IHRoaXMucHJvcHMuZmlsdGVyU3RhdGU7XG4gICAgdmFyIHN0YXRlVGFnTm9kZXMgPSBPYmplY3Qua2V5cyhmaWx0ZXJTdGF0ZSlcbiAgICAgIC5tYXAoZnVuY3Rpb24gKGZpZWxkLCBpbmRleCkge1xuICAgICAgICB2YXIgc3RhdGUgPSBmaWx0ZXJTdGF0ZVtmaWVsZF07XG4gICAgICAgIHZhciBkZWYgPSB0aGlzLnByb3BzLmdldEZpbHRlckRlZihmaWVsZCk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPEZpbHRlclN0YXRlVGFnXG4gICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgbmFtZT17ZGVmLm5hbWV9XG4gICAgICAgICAgICB2YWx1ZT17c3RhdGV9XG4gICAgICAgICAgICB0cmVlVmlldz17ZGVmLnRyZWVWaWV3fVxuICAgICAgICAgICAgb25UYWdSZW1vdmU9e3RoaXMucHJvcHMub25TdGF0ZURlbGV0ZS5iaW5kKG51bGwsIGZpZWxkKX1cbiAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWx0ZXItc3RhdGVcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjdXN0b20tY29udGVudFwiPlxuICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWx0ZXItdGFnc1wiPlxuICAgICAgICAgIHtzdGF0ZVRhZ05vZGVzfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn0pO1xuXG4vKiDljZXmnaHov4fmu6TlmaggKi9cbnZhciBGaWx0ZXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc011bHRpU2VsZWN0OiBmYWxzZSxcbiAgICAgIGlzRXhwYW5kZWQ6IGZhbHNlLFxuICAgICAgbXVsdGlTZWxlY3RlZDoge30gICAgLy8g5pqC5pe26KKr5aSa6YCJ5Lit55qE6YCJ6aG5XG4gICAgfTtcbiAgfSxcbiAgZ2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNhbk11bHRpU2VsZWN0OiBmYWxzZSxcbiAgICAgIHRyZWVWaWV3OiBmYWxzZSxcbiAgICAgIG9wdGlvbnM6IFtdLFxuICAgIH07XG4gIH0sXG4gIG11bHRpU2VsZWN0VG9nZ2xlOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBldmVudCAmJiBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgaXNNdWx0aVNlbGVjdDogIXRoaXMuc3RhdGUuaXNNdWx0aVNlbGVjdCxcbiAgICAgIC8vIOiLpeeUsemdnuWkmumAieWIsOWkmumAie+8jOWImeiHquWKqOWxleW8gFxuICAgICAgaXNFeHBhbmRlZDogdGhpcy5zdGF0ZS5pc011bHRpU2VsZWN0ID8gZmFsc2UgOiB0cnVlXG4gICAgfSk7XG4gIH0sXG4gIGV4cGFuZFRvZ2dsZTogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgZXZlbnQgJiYgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIC8vIOiLpeeUseWxleW8gOWIsOaUtui1t++8jOWImeWPlua2iOWkmumAieeKtuaAgVxuICAgICAgaXNNdWx0aVNlbGVjdDogdGhpcy5zdGF0ZS5pc0V4cGFuZGVkID8gZmFsc2UgOiB0aGlzLnN0YXRlLmlzTXVsdGlTZWxlY3QsXG4gICAgICBpc0V4cGFuZGVkOiAhdGhpcy5zdGF0ZS5pc0V4cGFuZGVkXG4gICAgfSk7XG4gIH0sXG4gIC8vIOeUqOS6juabtOaWsOaaguaXtuiiq+WkmumAieS4reeahOmAiemhueeKtuaAgVxuICB1cGRhdGVNdWx0aVNlbGVjdGVkOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICB2YXIgbXVsdGlTZWxlY3RlZCA9IHRoaXMuc3RhdGUubXVsdGlTZWxlY3RlZDtcbiAgICBtdWx0aVNlbGVjdGVkW3ZhbHVlLnZhbHVlXSA/XG4gICAgICBtdWx0aVNlbGVjdGVkW3ZhbHVlLnZhbHVlXSA9IG51bGwgOlxuICAgICAgbXVsdGlTZWxlY3RlZFt2YWx1ZS52YWx1ZV0gPSB2YWx1ZTtcbiAgICB0aGlzLnNldFN0YXRlKHttdWx0aVNlbGVjdGVkOiBtdWx0aVNlbGVjdGVkfSk7XG4gIH0sXG4gIC8vIOehruiupOWkmumAieeahOeKtuaAgVxuICBjb25maXJtTXVsdGlTZWxlY3Q6IGZ1bmN0aW9uIChldmVudCkge1xuICAgIGV2ZW50ICYmIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIHNlbGVjdGVkT2JqID0gdGhpcy5zdGF0ZS5tdWx0aVNlbGVjdGVkO1xuICAgIHZhciBzZWxlY3RlZEFyciA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBzZWxlY3RlZE9iaikge1xuICAgICAgaWYgKHNlbGVjdGVkT2JqLmhhc093blByb3BlcnR5KGtleSkgJiYgc2VsZWN0ZWRPYmpba2V5XSkge1xuICAgICAgICBzZWxlY3RlZEFyci5wdXNoKHNlbGVjdGVkT2JqW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLnByb3BzLm9uU2VsZWN0T3B0aW9uKHNlbGVjdGVkQXJyKTtcbiAgICAvLyDmuIXnqbrlpJrpgInmmoLlrZhcbiAgICB0aGlzLnNldFN0YXRlKHttdWx0aVNlbGVjdGVkOiB7fX0pO1xuICAgIC8vIOWPlua2iOWkmumAieeKtuaAgVxuICAgIHRoaXMubXVsdGlTZWxlY3RUb2dnbGUoKTtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGhhbmRsZVNlbGVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgaWYgKCF0aGlzLnN0YXRlLmlzTXVsdGlTZWxlY3QpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vblNlbGVjdE9wdGlvbih2YWx1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMudXBkYXRlTXVsdGlTZWxlY3RlZCh2YWx1ZSk7XG4gICAgfS5iaW5kKHRoaXMpO1xuICAgIHZhciBvcHRpb25Ob2RlcyA9IHRoaXMucHJvcHMub3B0aW9ucy5tYXAoZnVuY3Rpb24gKG9wdGlvbiwgaW5kZXgpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxsaSBrZXk9e2luZGV4fSBjbGFzc05hbWU9XCJmaWx0ZXItaXRlbVwiPlxuICAgICAgICAgIDxGaWx0ZXJPcHRpb24gdmFsdWU9e29wdGlvbn0gb25TZWxlY3Q9e2hhbmRsZVNlbGVjdH0gaXNNdWx0aVNlbGVjdD17dGhpcy5zdGF0ZS5pc011bHRpU2VsZWN0fSAvPlxuICAgICAgICA8L2xpPlxuICAgICAgKTtcbiAgICB9LmJpbmQodGhpcykpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImZpbHRlclwiICsgKHRoaXMuc3RhdGUuaXNFeHBhbmRlZCA/IFwiIGV4cGFuZGVkXCIgOiBcIlwiKX0gc3R5bGU9e3tkaXNwbGF5OiB0aGlzLnByb3BzLm9wdGlvbnMubGVuZ3RoID4gMCA/ICdibG9jaycgOiAnbm9uZSd9fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkXCI+XG4gICAgICAgICAgPGg0IGNsYXNzTmFtZT1cImZpbHRlci1uYW1lXCI+e3RoaXMucHJvcHMubmFtZX08L2g0PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvZHlcIj5cbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwiZmlsdGVyLWl0ZW1zXCI+XG4gICAgICAgICAgICB7b3B0aW9uTm9kZXN9XG4gICAgICAgICAgPC91bD5cblxuICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiB0aGlzLnN0YXRlLmlzTXVsdGlTZWxlY3QgPyAnYmxvY2snIDogJ25vbmUnfX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibXVsdGktY29uZmlybVwiPlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4tY29uZmlybVwiIG9uQ2xpY2s9e3RoaXMuY29uZmlybU11bHRpU2VsZWN0fSB0eXBlPVwiYnV0dG9uXCIgbmFtZT1cImNvbmZpcm1cIj7noa7lrpo8L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuLWNhbmNlbFwiIHR5cGU9XCJidXR0b25cIiBuYW1lPVwiY2FuY2VsXCIgb25DbGljaz17dGhpcy5tdWx0aVNlbGVjdFRvZ2dsZX0+5Y+W5raIPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9vdFwiPlxuICAgICAgICAgIDxGaWx0ZXJBY3Rpb25cbiAgICAgICAgICAgIG11bHRpVG9nZ2xlU3RhdHVzPXt0aGlzLnByb3BzLmNhbk11bHRpU2VsZWN0ICYmXG4gICAgICAgICAgICAgICF0aGlzLnN0YXRlLmlzTXVsdGlTZWxlY3R9XG4gICAgICAgICAgICBleHBhbmRUb2dnbGVTdGF0dXM9eyF0aGlzLnN0YXRlLmlzRXhwYW5kZWR9XG4gICAgICAgICAgICBtdWx0aVRvZ2dsZT17dGhpcy5tdWx0aVNlbGVjdFRvZ2dsZX1cbiAgICAgICAgICAgIGV4cGFuZFRvZ2dsZT17dGhpcy5leHBhbmRUb2dnbGV9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59KTtcblxuLyog6L+H5ruk5Zmo57uE77yM5pyA5aSW5bGC57uE5Lu2ICovXG4vKipcbiAqIFtwcm9wc11cbiAqIHtvYmplY3R9IGZpbHRlckRlZnNcbiAqIHtvYmplY3R9IGZpbHRlclZhbHVlc1xuICoge2Z1bmN0aW9ufSBvblN0YXRlQ2hhbmdlXG4gKi9cbnZhciBGaWx0ZXJHcm91cCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGZpbHRlclZhbHVlczogdGhpcy5wcm9wcy5maWx0ZXJWYWx1ZXMsXG4gICAgICBmaWx0ZXJTdGF0ZToge31cbiAgICB9O1xuICB9LFxuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZmlsdGVyVmFsdWVzOiB7fSxcbiAgICAgIG9uU3RhdGVDaGFuZ2U6IGZ1bmN0aW9uICgpIHt9XG4gICAgfTtcbiAgfSxcbiAgY29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGVmcyA9IHRoaXMucHJvcHMuZmlsdGVyRGVmc1xuICAgICAgLnJlZHVjZShmdW5jdGlvbiAoZGVmcywgZmlsdGVyRGVmKSB7XG4gICAgICAgIGRlZnNbZmlsdGVyRGVmLmZpZWxkXSA9IGZpbHRlckRlZjtcbiAgICAgICAgcmV0dXJuIGRlZnM7XG4gICAgICB9LCB7fSk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7ZGVmSW5kZXg6IGRlZnN9KTtcbiAgfSxcbiAgdXBkYXRlRmlsdGVyVmFsdWU6IGZ1bmN0aW9uICh2YWx1ZXMpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtmaWx0ZXJWYWx1ZXM6IHZhbHVlc30pO1xuICB9LFxuICBzZXRGaWx0ZXJTdGF0ZTogZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgLy8gaWYgKCF0aGlzLmlzU2FtZVN0YXRlKHRoaXMuc3RhdGUuZmlsdGVyU3RhdGUsIHN0YXRlKSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe2ZpbHRlclN0YXRlOiBzdGF0ZX0pO1xuICAgIC8vIH1cbiAgfSxcbiAgYWRkRmlsdGVyU3RhdGU6IGZ1bmN0aW9uIChmaWVsZCwgdmFsdWUpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgdmFyIGRlZnMgPSB0aGF0LnN0YXRlLmRlZkluZGV4O1xuICAgIHZhciBzdGF0ZSA9IHRoaXMuc3RhdGUuZmlsdGVyU3RhdGU7XG4gICAgdmFyIGNoYW5nZWQgPSBmYWxzZTtcbiAgICB2YXIgaGFzVmFsdWUgPSAhIXN0YXRlW2ZpZWxkXTtcblxuICAgIGlmIChkZWZzW2ZpZWxkXS50cmVlVmlldykge1xuICAgICAgdmFyIGluZGV4T2ZUcmVlID0gaGFzVmFsdWUgP1xuICAgICAgICB0aGF0LmZpbmRJbmRleChzdGF0ZVtmaWVsZF0sIHZhbHVlKSA6XG4gICAgICAgIC0xO1xuICAgICAgLy8g5Yik5pat5b2T5YmN54K55Ye755qE5ZKM5LiK5LiA5Liq6YCJ6aG55piv5ZCm5piv5ZCM5LiA5Liq5bGC57qnXG4gICAgICB2YXIgaXNTYW1lTGV2ZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaGFzVmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxlbiA9IHN0YXRlW2ZpZWxkXS5sZW5ndGg7XG4gICAgICAgIHZhciBjdXJyZW50U3RhdGUgPSB0aGF0LnByb3BzLmZpbHRlclZhbHVlc1tmaWVsZF0gfHwgW107XG4gICAgICAgIHJldHVybiB0aGF0LmZpbmRJbmRleChjdXJyZW50U3RhdGUsIHZhbHVlKSA+IC0xICYmXG4gICAgICAgICAgdGhhdC5maW5kSW5kZXgoY3VycmVudFN0YXRlLCBzdGF0ZVtmaWVsZF1bbGVuIC0gMV0pID4gLTE7XG4gICAgICB9O1xuICAgICAgLy8g5b2T5LiA5byA5aeL5rKh5pyJ5YC85oiW54K55Ye755qE5LiN5piv5pyA5ZCO5LiA5Liq5bGC57qn5pe277yM5qCH6K6w54q25oCB5Li65pS55Y+YXG4gICAgICBjaGFuZ2VkID0gIWhhc1ZhbHVlIHx8IChpbmRleE9mVHJlZSAhPSBzdGF0ZVtmaWVsZF0ubGVuZ3RoIC0gMSk7XG4gICAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgICBzdGF0ZVtmaWVsZF0gPSBzdGF0ZVtmaWVsZF0gfHwgW107XG4gICAgICAgIC8vIOWmguaenOW3suacieatpOWxgue6p+eahOmAiemhue+8jOebtOaOpeWumuS9jeWIsOatpOWxgue6p1xuICAgICAgICBpZiAoaW5kZXhPZlRyZWUgPj0gMCkge1xuICAgICAgICAgIHN0YXRlW2ZpZWxkXSA9IHN0YXRlW2ZpZWxkXS5zbGljZSgwLCBpbmRleE9mVHJlZSArIDEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIC8vIOW9k+S4i+S4gOWxgue6p+eahOmAiemhuei/mOacquWKoOi9veaXtuWPr+iDveWvueWQjOS4gOWxgue6p+eahOmAiemhueWBmuWkmuasoemAieaLqVxuICAgICAgICAgIC8vIOatpOaXtuS/neaMgeWQjOS4gOWxgue6p+mAieaLqeeahOS6kuaWpeaAp++8jOaAu+aYr+WPquiDvemAieaLqeS4gOS4qumAiemhuVxuICAgICAgICAgIGlmIChpc1NhbWVMZXZlbCgpKSB7XG4gICAgICAgICAgICBzdGF0ZVtmaWVsZF0ucG9wKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHN0YXRlW2ZpZWxkXS5wdXNoKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAvLyDpnZ4gdHJlZVZpZXdcbiAgICAvLyDml6Dor6UgZmllbGQg5LiL55qEIHN0YXRl77yM5oiWIHZhbHVlIOWAvOS4jeebuOetie+8jOaIliB2YWx1ZSDmlbDnu4TkuI3nm7jnrYlcbiAgICBlbHNlIGlmICghaGFzVmFsdWUgfHxcbiAgICAgIHZhbHVlLnZhbHVlICE9PSBzdGF0ZVtmaWVsZF0udmFsdWUgfHxcbiAgICAgIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiAhdGhhdC5pc1NhbWVTdGF0ZSh2YWx1ZSwgc3RhdGVbZmllbGRdKSlcbiAgICApIHtcblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aGF0LnJlbW92ZUZpbHRlclN0YXRlKGZpZWxkKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBzdGF0ZVtmaWVsZF0gPSB2YWx1ZTtcbiAgICAgICAgY2hhbmdlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZmlyZVxuICAgIGlmIChjaGFuZ2VkKSB7XG4gICAgICB0aGF0LnNldFN0YXRlKHtmaWx0ZXJTdGF0ZTogc3RhdGV9KTtcbiAgICAgIHRoYXQucHJvcHMub25TdGF0ZUNoYW5nZSh0aGlzLnN0YXRlLmZpbHRlclN0YXRlLCB0aGF0KTtcbiAgICB9XG4gIH0sXG4gIHJlbW92ZUZpbHRlclN0YXRlOiBmdW5jdGlvbiAoZmllbGQsIHZhbHVlKSB7XG4gICAgdmFyIGRlZnMgPSB0aGlzLnN0YXRlLmRlZkluZGV4O1xuICAgIHZhciBzdGF0ZSA9IHRoaXMuc3RhdGUuZmlsdGVyU3RhdGU7XG4gICAgdmFyIGluZGV4T2ZUcmVlO1xuICAgIGlmIChkZWZzW2ZpZWxkXS50cmVlVmlldykge1xuICAgICAgaW5kZXhPZlRyZWUgPSB0aGlzLmZpbmRJbmRleChzdGF0ZVtmaWVsZF0sIHZhbHVlKTtcbiAgICAgIGlmIChpbmRleE9mVHJlZSA9PT0gMCkge1xuICAgICAgICBkZWxldGUgc3RhdGVbZmllbGRdO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoaW5kZXhPZlRyZWUgPiAwKSB7XG4gICAgICAgIHN0YXRlW2ZpZWxkXSA9IHN0YXRlW2ZpZWxkXS5zbGljZSgwLCBpbmRleE9mVHJlZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgZGVsZXRlIHN0YXRlW2ZpZWxkXTtcbiAgICB9XG5cbiAgICAvLyBmaXJlXG4gICAgdGhpcy5zZXRTdGF0ZSh7ZmlsdGVyU3RhdGU6IHN0YXRlfSk7XG4gICAgdGhpcy5wcm9wcy5vblN0YXRlQ2hhbmdlKHRoaXMuc3RhdGUuZmlsdGVyU3RhdGUsIHRoaXMpO1xuICB9LFxuICBnZXRGaWx0ZXJEZWY6IGZ1bmN0aW9uIChmaWVsZCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmRlZkluZGV4W2ZpZWxkXTtcbiAgfSxcblxuICAvLyB1dGlsIGZuXG4gIGlzU2FtZVN0YXRlOiBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICBpZiAodGhhdC5pc0VtcHR5T2JqKG8pICYmICF0aGF0LmlzRW1wdHlPYmoobikgfHxcbiAgICAgICF0aGF0LmlzRW1wdHlPYmoobykgJiYgdGhhdC5pc0VtcHR5T2JqKG4pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0aGF0LmlzRW1wdHlPYmoobykgJiYgdGhhdC5pc0VtcHR5T2JqKG4pIHx8XG4gICAgICBPYmplY3Qua2V5cyhvKVxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChmaWVsZCkge1xuICAgICAgICAgIHJldHVybiB0aGF0LnByb3BzLmZpbHRlckRlZnMuaGFzT3duUHJvcGVydHkoZmllbGQpO1xuICAgICAgICB9KVxuICAgICAgICAuZXZlcnkoZnVuY3Rpb24gKGZpZWxkKSB7XG4gICAgICAgICAgaWYgKG9bZmllbGRdID09PSBuW2ZpZWxkXSB8fCBvW2ZpZWxkXS52YWx1ZSA9PT0gbltmaWVsZF0udmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KG9bZmllbGRdKSAmJiBBcnJheS5pc0FycmF5KG5bZmllbGRdKSkge1xuICAgICAgICAgICAgICByZXR1cm4gb1tmaWVsZF0uZXZlcnkoZnVuY3Rpb24gKG9TdGF0ZSwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gb1N0YXRlID09PSBuW2ZpZWxkXVtpbmRleF0gfHxcbiAgICAgICAgICAgICAgICAgIG9TdGF0ZS52YWx1ZSA9PT0gbltmaWVsZF1baW5kZXhdLnZhbHVlO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgfSxcbiAgaXNTYW1lVmFsdWVBcnJheTogZnVuY3Rpb24gKG9BcnIsIG5BcnIpIHtcbiAgICByZXR1cm4gb0Fyci5ldmVyeShmdW5jdGlvbiAodmFsdWUsIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWUudmFsdWUgPT09IG5BcnJbaW5kZXhdLnZhbHVlO1xuICAgIH0pO1xuICB9LFxuICBpc0VtcHR5T2JqOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoID09PSAwO1xuICB9LFxuICAvLyDnlKjkuo7lnKjorr7nva7kuoYgdHJlZVZpZXcg6YCJ6aG555qEIGZpbHRlciBzdGF0ZSDkuK3lr7vmib7lt7LpgInnirbmgIHkvY3nva5cbiAgZmluZEluZGV4OiBmdW5jdGlvbiAoYXJyLCB2YWx1ZSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoYXJyW2ldLnZhbHVlID09PSB2YWx1ZS52YWx1ZSkge1xuICAgICAgICByZXR1cm4gaTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIC0xO1xuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHZhciBmaWx0ZXJOb2RlcyA9IHRoaXMucHJvcHMuZmlsdGVyRGVmcy5tYXAoZnVuY3Rpb24gKGRlZiwgaW5kZXgpIHtcbiAgICAgIHZhciBvcHRpb25zID0gdGhpcy5zdGF0ZS5maWx0ZXJWYWx1ZXNbZGVmLmZpZWxkXSB8fCBbXTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxsaSBrZXk9e2luZGV4fSBzdHlsZT17e2Rpc3BsYXk6IG9wdGlvbnMubGVuZ3RoID4gMCA/ICdibG9jaycgOiAnbm9uZSd9fT5cbiAgICAgICAgICA8RmlsdGVyXG4gICAgICAgICAgICBuYW1lPXtkZWYubmFtZX1cbiAgICAgICAgICAgIGZpZWxkPXtkZWYuZmllbGR9XG4gICAgICAgICAgICBjYW5NdWx0aVNlbGVjdD17ZGVmLmNhbk11bHRpU2VsZWN0fVxuICAgICAgICAgICAgdHJlZVZpZXc9e2RlZi50cmVlVmlld31cbiAgICAgICAgICAgIG9wdGlvbnM9e29wdGlvbnN9XG4gICAgICAgICAgICBvblNlbGVjdE9wdGlvbj17dGhpcy5hZGRGaWx0ZXJTdGF0ZS5iaW5kKG51bGwsIGRlZi5maWVsZCl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9saT5cbiAgICAgICk7XG4gICAgfS5iaW5kKHRoaXMpKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImN1LWZpbHRlci1ncm91cFwiPlxuICAgICAgICA8RmlsdGVyU3RhdGVCYXJcbiAgICAgICAgICBmaWx0ZXJTdGF0ZT17dGhpcy5zdGF0ZS5maWx0ZXJTdGF0ZX1cbiAgICAgICAgICBnZXRGaWx0ZXJEZWY9e3RoaXMuZ2V0RmlsdGVyRGVmfVxuICAgICAgICAgIG9uU3RhdGVEZWxldGU9e3RoaXMucmVtb3ZlRmlsdGVyU3RhdGV9XG4gICAgICAgID5cbiAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgPC9GaWx0ZXJTdGF0ZUJhcj5cbiAgICAgICAgPHVsIGNsYXNzTmFtZT1cImZpbHRlci1ncm91cFwiPlxuICAgICAgICAgIHtmaWx0ZXJOb2Rlc31cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnXG5cbi8vICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIENvbXBvbmVudDogUHJvZ3Jlc3NCYXJcbi8vXG4vLyAgSW5jbHVkZTogUGFnaW5hdGlvbkJ0blxuLy9cbi8vICBUT0RPOlxuLy8gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qIFBhZ2luYXRpb25CdG4gKi9cbnZhciBQYWdpbmF0aW9uQnRuID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXh0OiAxLFxuICAgICAgdHlwZTogXCJudW1cIlxuICAgIH07XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHRleHQgPSAodGhpcy5wcm9wcy50eXBlID09PSAnZG90JykgPyAnLi4uJyA6IHRoaXMucHJvcHMudGV4dDtcbiAgICB2YXIgaXRlbUNsYXNzID0gdGhpcy5wcm9wcy5hY3RpdmVcbiAgICAgID8gXCJpdGVtIGFjdGl2ZVwiXG4gICAgICA6IFwiaXRlbVwiO1xuICAgIGlmKHRoaXMucHJvcHMudHlwZSAhPT0gJ251bScpIHtcbiAgICAgIGl0ZW1DbGFzcyArPSAoXCIgcGFnZSBcIiArIHRoaXMucHJvcHMudHlwZSk7XG4gICAgfVxuICAgIGlmKHRoaXMucHJvcHMuZGlzYWJsZWQpIHtcbiAgICAgIGl0ZW1DbGFzcyArPSAnIGRpc2FibGVkJztcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgIDxsaSBjbGFzc05hbWU9e2l0ZW1DbGFzc30gb25DbGljaz17dGhpcy5wcm9wcy5jaGFuZ2VQYWdlfT5cbiAgICAgICAgPGE+e3RleHR9PC9hPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG59KTtcblxuLyogUGFnaW5hdGlvbiBPdmVydmlldyAqL1xudmFyIFBhZ2lPdmVydmlldyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdmVydmlld1wiPuWFsSB7dGhpcy5wcm9wcy5wYWdlc30g6aG177yMPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG5cbi8qIFBhZ2luYXRpb24gUXVpY2tHbyAqL1xudmFyIFBhZ2lRdWlja0dvID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBwYWdlSW5wdXQ6IG51bGxcbiAgICB9O1xuICB9LFxuICBpbnB1dENoYW5nZTogZnVuY3Rpb24oZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgcGFnZUlucHV0OiBlLnRhcmdldC52YWx1ZVxuICAgIH0pO1xuICB9LFxuICBxdWlja0dvOiBmdW5jdGlvbigpIHtcbiAgICBpZih0aGlzLnN0YXRlLnBhZ2VJbnB1dCkge1xuICAgICAgdmFyIG5leHRQYWdlID0gK3RoaXMuc3RhdGUucGFnZUlucHV0O1xuICAgICAgbmV4dFBhZ2UgPSBuZXh0UGFnZSA8IDEgPyAxIDogbmV4dFBhZ2U7XG4gICAgICBuZXh0UGFnZSA9IG5leHRQYWdlID4gdGhpcy5wcm9wcy5wYWdlcyA/IHRoaXMucHJvcHMucGFnZXMgOiBuZXh0UGFnZTtcbiAgICAgIHRoaXMucHJvcHMuc2V0QWN0aXZlUGFnZShuZXh0UGFnZSlcbiAgICB9XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVpY2stZ29cIj5cbiAgICAgICAgPHNwYW4+5Yiw56ysPC9zcGFuPlxuICAgICAgICA8aW5wdXQgY2xhc3NOYW1lPVwiZ28tcGFnZVwiIHR5cGU9XCJudW1iZXJcIiBtaW49XCIxXCIgbWF4PXt0aGlzLnByb3BzLnBhZ2VzfSBvbkNoYW5nZT17dGhpcy5pbnB1dENoYW5nZX0gLz5cbiAgICAgICAgPHNwYW4+6aG1PC9zcGFuPlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImdvLXN1Ym1pdFwiIG9uQ2xpY2s9e3RoaXMucXVpY2tHb30+56Gu6K6kPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59KTtcblxuLyogUGFnaW5hdGlvbiBNYWluICovXG52YXIgUGFnaU1haW4gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhZ2VJdGVtczogdGhpcy5nZXRQYWdlSXRlbXModGhpcy5wcm9wcy5hY3RpdmVQYWdlKVxuICAgIH07XG4gIH0sXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHM6IGZ1bmN0aW9uKG5leHRQcm9wcykge1xuICAgIGlmKG5leHRQcm9wcy5hY3RpdmVQYWdlICE9PSB0aGlzLnByb3BzLmFjdGl2ZVBhZ2UgfHwgbmV4dFByb3BzLnBhZ2VzICE9PSB0aGlzLnByb3BzLnBhZ2VzKSB7XG4gICAgICB2YXIgcGFnZUl0ZW1zID0gdGhpcy5nZXRQYWdlSXRlbXMobmV4dFByb3BzLmFjdGl2ZVBhZ2UsIG5leHRQcm9wcy5wYWdlcyk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgcGFnZUl0ZW1zOiBwYWdlSXRlbXNcbiAgICAgIH0pO1xuICAgICAgaWYobmV4dFByb3BzLmFjdGl2ZVBhZ2UgIT09IHRoaXMucHJvcHMuYWN0aXZlUGFnZSkge1xuICAgICAgICB0aGlzLnByb3BzLnNlbGVjdGVkKG5leHRQcm9wcy5hY3RpdmVQYWdlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIGhhbmRsZUl0ZW1DbGljazogZnVuY3Rpb24odHlwZSwgcGFnZSkge1xuICAgIGlmICh0eXBlID09PSBcImZpcnN0XCIpIHtcbiAgICAgIHBhZ2UgPSAxO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJwcmV2XCIpIHtcbiAgICAgIHBhZ2UgPSAodGhpcy5wcm9wcy5hY3RpdmVQYWdlID09PSAxKSA/IDEgOiB0aGlzLnByb3BzLmFjdGl2ZVBhZ2UgLSAxO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJuZXh0XCIpIHtcbiAgICAgIHBhZ2UgPSAodGhpcy5wcm9wcy5hY3RpdmVQYWdlID09PSB0aGlzLnByb3BzLnBhZ2VzKSA/IHRoaXMucHJvcHMucGFnZXMgOiB0aGlzLnByb3BzLmFjdGl2ZVBhZ2UgKyAxO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJsYXN0XCIpIHtcbiAgICAgIHBhZ2UgPSB0aGlzLnByb3BzLnBhZ2VzO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYWdlID0gcGFnZSA+IHRoaXMucHJvcHMucGFnZXMgPyB0aGlzLnByb3BzLnBhZ2VzIDogcGFnZTtcbiAgICB9XG4gICAgaWYgKHBhZ2UgIT09IHRoaXMucHJvcHMuYWN0aXZlUGFnZSkge1xuICAgICAgdGhpcy5wcm9wcy5zZXRBY3RpdmVQYWdlKHBhZ2UpO1xuICAgIH1cbiAgfSxcbiAgZ2V0UGFnZUl0ZW1zOiBmdW5jdGlvbihuLCBwYWdlcykge1xuICAgIHZhciBsaXN0ID0gW107XG4gICAgdmFyIGIgPSB0aGlzLnByb3BzLmJhc2VQYWdlcztcbiAgICB2YXIgbSA9IHRoaXMucHJvcHMubWlkUGFnZXM7XG4gICAgdmFyIHAgPSBwYWdlcyB8fCB0aGlzLnByb3BzLnBhZ2VzO1xuICAgIGlmKG4gPD0gcGFyc2VJbnQobSAvIDIpICsgMSkgeyAvLyAxXG4gICAgICBsaXN0ID0gdGhpcy5fZ2V0U2VyaWVzTnVtYmVyKDEsIHAgPD0gYiArIG0gPyBwIDogbSk7XG4gICAgfSBlbHNlIGlmKChuIDw9IHBhcnNlSW50KG0gLyAyKSArIDEgKyBiKSB8fCBwIDw9IGIgKyBtKSAgeyAvLyAxJ1xuICAgICAgbGlzdCA9IHRoaXMuX2dldFNlcmllc051bWJlcigxLCBwIDw9IGIgKyBtID8gcCA6IG4gKyAyKTtcbiAgICB9IGVsc2UgaWYoKG4gPCBwIC0gcGFyc2VJbnQobSAvIDIpIC0gMSkpIHsgIC8vIDJcbiAgICAgIGxpc3QgPSB0aGlzLl9nZXRTZXJpZXNOdW1iZXIoMSwgdGhpcy5wcm9wcy5iYXNlUGFnZXMpO1xuICAgICAgbGlzdC5wdXNoKDApO1xuICAgICAgbGlzdCA9IGxpc3QuY29uY2F0KHRoaXMuX2dldFNlcmllc051bWJlcihuLTIsIG0pKTtcbiAgICAgIGlmKHAgPiBtICsgYiArIDIpIHtcbiAgICAgICAgbGlzdC5wdXNoKDApO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZihuID09PSBwIC0gcGFyc2VJbnQobSAvIDIpIC0gMSkgeyAgLy8gM1xuICAgICAgbGlzdCA9IHRoaXMuX2dldFNlcmllc051bWJlcigxLCB0aGlzLnByb3BzLmJhc2VQYWdlcyk7XG4gICAgICBsaXN0LnB1c2goMCk7XG4gICAgICBsaXN0ID0gbGlzdC5jb25jYXQodGhpcy5fZ2V0U2VyaWVzTnVtYmVyKHAgLSBtLCBtICsgMSkpO1xuICAgIH0gZWxzZSB7ICAvLyA0XG4gICAgICBsaXN0ID0gdGhpcy5fZ2V0U2VyaWVzTnVtYmVyKDEsIHRoaXMucHJvcHMuYmFzZVBhZ2VzKTtcbiAgICAgIGxpc3QucHVzaCgwKTtcbiAgICAgIGxpc3QgPSBsaXN0LmNvbmNhdCh0aGlzLl9nZXRTZXJpZXNOdW1iZXIocCAtIG0gKyAxLCBtKSk7XG4gICAgfVxuICAgIHJldHVybiBsaXN0O1xuICB9LFxuICBfZ2V0U2VyaWVzTnVtYmVyOiBmdW5jdGlvbihzdGFydCwgbGVuZ3RoKSB7XG4gICAgc3RhcnQgPSBzdGFydDtcbiAgICBsZW5ndGggPSBsZW5ndGg7XG4gICAgdmFyIHNlcmllcyA9IFtdO1xuICAgIHdoaWxlKGxlbmd0aC0tKSB7XG4gICAgICBzZXJpZXMucHVzaChzdGFydCsrKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlcmllcztcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RhcnRCbG9jayA9IFtdO1xuICAgIHZhciBlbmRCbG9jayA9IFtdO1xuICAgIGlmKHRoaXMucHJvcHMucGFnZXMgPiAwKSB7XG4gICAgICBpZih0aGlzLnByb3BzLmZpcnN0KSB7XG4gICAgICAgIHN0YXJ0QmxvY2sucHVzaCg8UGFnaW5hdGlvbkJ0biBrZXk9J2ZpcnN0JyB0ZXh0PXt0aGlzLnByb3BzLmZpcnN0fSBkaXNhYmxlZD17KHRoaXMucHJvcHMuYWN0aXZlUGFnZSA9PT0gMSkgPyB0cnVlIDogZmFsc2V9IHR5cGU9XCJwcmV2XCIgdHlwZT1cImZpcnN0XCIgY2hhbmdlUGFnZT17dGhpcy5oYW5kbGVJdGVtQ2xpY2suYmluZCh0aGlzLCAnZmlyc3QnKX0gLz4pO1xuICAgICAgfVxuICAgICAgaWYodGhpcy5wcm9wcy5wcmV2KSB7XG4gICAgICAgIHN0YXJ0QmxvY2sucHVzaCg8UGFnaW5hdGlvbkJ0biBrZXk9J3ByZXYnIHRleHQ9e3RoaXMucHJvcHMucHJldn0gZGlzYWJsZWQ9eyh0aGlzLnByb3BzLmFjdGl2ZVBhZ2UgPT09IDEpID8gdHJ1ZSA6IGZhbHNlfSB0eXBlPVwicHJldlwiIGNoYW5nZVBhZ2U9e3RoaXMuaGFuZGxlSXRlbUNsaWNrLmJpbmQodGhpcywgJ3ByZXYnKX0gLz4pO1xuICAgICAgfVxuICAgICAgaWYodGhpcy5wcm9wcy5uZXh0KSB7XG4gICAgICAgIGVuZEJsb2NrLnB1c2goPFBhZ2luYXRpb25CdG4ga2V5PSduZXh0JyB0ZXh0PXt0aGlzLnByb3BzLm5leHR9IHR5cGU9XCJuZXh0XCIgZGlzYWJsZWQ9eyh0aGlzLnByb3BzLmFjdGl2ZVBhZ2UgPT09IHRoaXMucHJvcHMucGFnZXMpID8gdHJ1ZSA6IGZhbHNlfSBjaGFuZ2VQYWdlPXt0aGlzLmhhbmRsZUl0ZW1DbGljay5iaW5kKHRoaXMsICduZXh0Jyl9IC8+KTtcbiAgICAgIH1cbiAgICAgIGlmKHRoaXMucHJvcHMubGFzdCkge1xuICAgICAgICBlbmRCbG9jay5wdXNoKDxQYWdpbmF0aW9uQnRuIGtleT0nbGFzdCcgdGV4dD17dGhpcy5wcm9wcy5sYXN0fSB0eXBlPVwibGFzdFwiIGRpc2FibGVkPXsodGhpcy5wcm9wcy5hY3RpdmVQYWdlID09PSB0aGlzLnByb3BzLnBhZ2VzKSA/IHRydWUgOiBmYWxzZX0gY2hhbmdlUGFnZT17dGhpcy5oYW5kbGVJdGVtQ2xpY2suYmluZCh0aGlzLCAnbGFzdCcpfSAvPik7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8dWwgY2xhc3NOYW1lPVwicGFnaS1tYWluXCI+XG4gICAgICAgIHtzdGFydEJsb2NrfVxuICAgICAgICB7XG4gICAgICAgICAgKHRoaXMucHJvcHMucGFnZXMgPiAwKSAmJiB0aGlzLnN0YXRlLnBhZ2VJdGVtcy5tYXAoZnVuY3Rpb24oaXRlbSwgaSkge1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxQYWdpbmF0aW9uQnRuIGtleT17aX0gdGV4dD17aXRlbX0gdHlwZT17aXRlbSA/ICdudW0nIDogJ2RvdCd9IGFjdGl2ZT17KGl0ZW0gPT09IHRoaXMucHJvcHMuYWN0aXZlUGFnZSkgPyB0cnVlIDogZmFsc2V9IGNoYW5nZVBhZ2U9e2l0ZW0gPyB0aGlzLmhhbmRsZUl0ZW1DbGljay5iaW5kKHRoaXMsICdudW0nLCBpdGVtKSA6IG51bGx9IC8+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKSlcbiAgICAgICAgfVxuICAgICAgICB7ZW5kQmxvY2t9XG4gICAgICA8L3VsPlxuICAgIClcbiAgfVxufSk7XG5cbi8qIFBhZ2luYXRpb24gKi9cbnZhciBQYWdpbmF0aW9uID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBwcm9wVHlwZXM6IHtcbiAgICBwYWdlczogUmVhY3QuUHJvcFR5cGVzLm51bWJlclxuICB9LFxuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY3RpdmVQYWdlOiB0aGlzLnByb3BzLmFjdGl2ZVBhZ2VcbiAgICB9O1xuICB9LFxuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY3RpdmVQYWdlOiAxLCAvLyDmv4DmtLvpobXliJ3lp4vlgLxcbiAgICAgIGZpcnN0OiBudWxsLCAvLyDpppbpobUgbnVsbCB8fCBzdHJpbmdcbiAgICAgIHByZXY6IFwi5LiK5LiA6aG1XCIsIC8vIOS4iuS4gOmhtSBudWxsIHx8IHN0cmluZ1xuICAgICAgYmFzZVBhZ2VzOiAyLCAvLyBmaXJzdCBwcmV2IGJhc2UgLi4uIG1pZCAuLi4gbmV4dCBsYXN0XG4gICAgICBtaWRQYWdlczogNSwgLy8gZmlyc3QgcHJldiBiYXNlIC4uLiBtaWQgLi4uIG5leHQgbGFzdFxuICAgICAgZWxsaXBzaXM6IHRydWUsIC8vIOecgeeVpeWPtyBib29sZW5cbiAgICAgIG5leHQ6IFwi5LiL5LiA6aG1XCIsIC8vIOS4i+S4gOmhtSBudWxsIHx8IHN0cmluZ1xuICAgICAgbGFzdDogbnVsbCwgLy8g5pyr6aG1IG51bGwgfHwgc3RyaW5nXG4gICAgICB0aGVtZTogXCJsaWdodFwiLCAvLyDkuLvpophcbiAgICAgIHF1aWNrR286IGZhbHNlLCAvLyDmpoLop4jlkozlv6vpgJ/liIfmjaIgYm9vbGVuXG4gICAgICBzZWxlY3RlZDogZnVuY3Rpb24ocGFnZSkgeyAvLyDpobXnoIHliIfmjaLml7blm57osINcbiAgICAgICAgY29uc29sZS5sb2cocGFnZSk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzOiBmdW5jdGlvbihuZXh0UHJvcHMpIHtcbiAgICBpZihuZXh0UHJvcHMuYWN0aXZlUGFnZSAhPT0gdGhpcy5wcm9wcy5hY3RpdmVQYWdlKSB7XG4gICAgICB0aGlzLnNldEFjdGl2ZVBhZ2UobmV4dFByb3BzLmFjdGl2ZVBhZ2UpO1xuICAgIH1cbiAgfSxcbiAgc2V0QWN0aXZlUGFnZTogZnVuY3Rpb24ocGFnZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgYWN0aXZlUGFnZTogcGFnZVxuICAgIH0pO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBwYWdpQ2xhc3MgPSAodGhpcy5wcm9wcy50aGVtZSA9PT0gJ2xpZ2h0JykgPyAncGFnaW5hdGlvbicgOiAncGFnaW5hdGlvbiAnICsgdGhpcy5wcm9wcy50aGVtZTtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3BhZ2lDbGFzc30+XG4gICAgICAgIDxQYWdpTWFpbiB7Li4udGhpcy5wcm9wc30gYWN0aXZlUGFnZT17dGhpcy5zdGF0ZS5hY3RpdmVQYWdlfSBzZXRBY3RpdmVQYWdlPXt0aGlzLnNldEFjdGl2ZVBhZ2V9IC8+XG4gICAgICAgIHt0aGlzLnByb3BzLnF1aWNrR28gPyA8UGFnaU92ZXJ2aWV3IHBhZ2VzPXt0aGlzLnByb3BzLnBhZ2VzfSAvPiA6IG51bGx9XG4gICAgICAgIHt0aGlzLnByb3BzLnF1aWNrR28gPyA8UGFnaVF1aWNrR28gcGFnZXM9e3RoaXMucHJvcHMucGFnZXN9IHNldEFjdGl2ZVBhZ2U9e3RoaXMuc2V0QWN0aXZlUGFnZX0gLz4gOiBudWxsfVxuICAgICAgPC9kaXY+XG4gIClcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCdcblxuLy8gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAgQ29tcG9uZW50OiBQcm9ncmVzc0JhclxuLy9cbi8vICBJbmNsdWRlOiBTcGlubmVyXG4vL1xuLy8gIERlc2NyaXB0aW9uOiBKc3ggZm9yIFByb2dyZXNzQmFyXG4vL1xuLy8gIFRPRE86IFtmaXhdIOS/ruato+WIneWni+aXtiB0cmFuc2l0aW9uIOS4jeeUn+aViOeahOmXrumimFxuLy8gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qIFNwaW5uZXIgKi9cbnZhciBTcGlubmVyID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImN1LXNwaW5uZXJcIiBzdHlsZT17e2JvcmRlckNvbG9yOiB0aGlzLnByb3BzLmNvbG9yLGJvcmRlckxlZnRDb2xvcjogJ3RyYW5zcGFyZW50J319PjwvZGl2PlxuICAgICk7XG4gIH1cbn0pO1xuXG4vKiBQcm9ncmVzc0JhciAqL1xudmFyIFByb2dyZXNzQmFyID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICByYXRlOiBudWxsLFxuICAgICAgZG9uZTogZmFsc2VcbiAgICB9O1xuICB9LFxuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzcGVlZDogMC42LCAgLy8g5Yqo55S76YCf5bqmXG4gICAgICBzcGlubmVyOiB0cnVlLCAgLy8g5piv5ZCm5pyJ5ZyI5ZyIXG4gICAgICBlYXNpbmc6ICdlYXNlJywgIC8vIOWKqOeUu+e8k+WKqOabsue6v1xuICAgICAgbWF4UmF0ZTogMC45NiwgIC8vIOi/m+W6puadoeacgOWkp+WuveW6plxuICAgICAgaW5jU3RlcDogMC4wNCwgIC8vIGluYyDlop7plb/mraXluYVcbiAgICAgIG1pblN0ZXA6IDAuMDA1LCAgLy8g6ZqP5py65aKe6ZW/55qE5pyA5bCP5q2l5bmFXG4gICAgICBtYXhTdGVwOiAwLjAzLCAgLy8g6ZqP5py65aKe6ZW/55qE5pyA5aSn5q2l5bmFXG4gICAgICB0cmlja2xlOiB0cnVlLCAgLy8g5piv5ZCm6Ieq5Yqo5aKe6ZW/XG4gICAgICB0cmlja2xlU3BlZWQ6IDgwMCwgIC8vIOiHquWKqOWinumVv+eahOmXtOmalOaXtumXtFxuICAgICAgY29sb3I6ICcjMDljNGM3JyxcbiAgICAgIHNldFRyaWNrbGU6IGZhbHNlICAvLyBzZXQg5ZCO5piv5ZCm6Ieq5Yqo5aKe6ZW/77yI5pyq5ZCv55So77yJXG4gICAgfTtcbiAgfSxcbiAgc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2luaXQoKTtcbiAgICB0aGlzLnNldCgnMC41JScpO1xuICAgIHRoaXMucHJvcHMudHJpY2tsZSAmJiB0aGlzLl9hdXRvSW5jKCk7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24obiwgdHJpY2tsZSkge1xuICAgICF0cmlja2xlICYmIHRoaXMuX2luaXQoKTtcbiAgICBuID0gdGhpcy5fZm9ybWF0KG4pO1xuICAgIGlmIChuID09PSAxMDApIHtcbiAgICAgIC8qIGRvbmUgKi9cbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICByYXRlOiAxMDBcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBuID0gbiA+IHRoaXMucHJvcHMubWF4UmF0ZSAqIDEwMFxuICAgICAgICA/IHRoaXMucHJvcHMubWF4UmF0ZSAqIDEwMFxuICAgICAgICA6IG47XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgcmF0ZTogblxuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICBpbmM6IGZ1bmN0aW9uKG4pIHtcbiAgICB0aGlzLl9pbml0KCk7XG4gICAgdGhpcy5wcm9wcy50cmlja2xlICYmIHRoaXMuX2F1dG9JbmMoKTtcbiAgICBuID0gblxuICAgICAgPyB0aGlzLl9mb3JtYXQobilcbiAgICAgIDogdGhpcy5wcm9wcy5pbmNTdGVwICogMTAwO1xuICAgIHZhciBuZXdSYXRlID0gdGhpcy5zdGF0ZS5yYXRlICsgbjtcbiAgICB0aGlzLnNldChuZXdSYXRlICsgJyUnLCB0cnVlKTtcbiAgfSxcbiAgZG9uZTogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zZXQoJzEwMCUnKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGRvbmU6IHRydWVcbiAgICAgIH0pO1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgcmF0ZTogbnVsbFxuICAgICAgICB9KTtcbiAgICAgIH0uYmluZCh0aGlzKSwgdGhpcy5wcm9wcy5zcGVlZCAqIDIgKiAxMDAwKTtcbiAgICB9LmJpbmQodGhpcyksIHRoaXMucHJvcHMuc3BlZWQgKiAxMDAwKTtcbiAgfSxcbiAgX2Zvcm1hdDogZnVuY3Rpb24oZGF0YSkgeyAgLy8g5qC85byP5YyW5Li6IDAtMTAwIOeahOaVtOaVsFxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ251bWJlcicpIHsgIC8vIDAtMSDnmoTlsI/mlbBcbiAgICAgIHJldHVybiBkYXRhID4gMVxuICAgICAgICA/IHRoaXMucHJvcy5tYXhSYXRlICogMTAwXG4gICAgICAgIDogZGF0YSAqIDEwMDtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykgeyAgLy8g55m+5YiG5q+UXG4gICAgICByZXR1cm4gcGFyc2VGbG9hdChkYXRhKSA+IDEwMFxuICAgICAgICA/IHRoaXMucHJvcHMubWF4UmF0ZSAqIDEwMFxuICAgICAgICA6IHBhcnNlRmxvYXQoZGF0YSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH0sXG4gIF9pbml0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0YXRlLmRvbmUgJiYgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBkb25lOiBmYWxzZVxuICAgIH0pO1xuICAgIHRoaXMudGltZXIgJiYgdGhpcy5fY2xlYXJJbnRlcnZhbCgpO1xuICB9LFxuICBfYXV0b0luYzogZnVuY3Rpb24oKSB7XG4gICAgdmFyIG5ld1JhdGU7XG4gICAgdmFyIHJhbmRvbTtcbiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByYW5kb20gPSB0aGlzLl9nZXRSYWRvbVN0ZXAoKTtcbiAgICAgIG5ld1JhdGUgPSB0aGlzLnN0YXRlLnJhdGUgKyByYW5kb207XG4gICAgICBjb25zb2xlLmxvZyhyYW5kb20pO1xuICAgICAgaWYgKG5ld1JhdGUgPiB0aGlzLnByb3BzLm1heFJhdGUgKiAxMDApIHtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5wcm9wcy5tYXhSYXRlICogMTAwKTtcbiAgICAgICAgdGhpcy5fY2xlYXJJbnRlcnZhbCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyhuZXdSYXRlKTtcbiAgICAgIHRoaXMuc2V0KG5ld1JhdGUgKyAnJScsIHRydWUpO1xuICAgIH0uYmluZCh0aGlzKSwgdGhpcy5wcm9wcy50cmlja2xlU3BlZWQpO1xuICB9LFxuICBfY2xlYXJJbnRlcnZhbDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy50aW1lciAmJiBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xuICB9LFxuICBfZ2V0UmFkb21TdGVwOiBmdW5jdGlvbihtaW4sIG1heCkge1xuICAgIG1pbiA9IG1pbiB8fCB0aGlzLnByb3BzLm1pblN0ZXAgKiAxMDA7XG4gICAgbWF4ID0gbWF4IHx8IHRoaXMucHJvcHMubWF4U3RlcCAqIDEwMDtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBwcm9ncmVzc1N0eWxlID0ge1xuICAgICAgLy9kaXNwbGF5OiAoIXRoaXMuc3RhdGUucmF0ZSAmJiB0eXBlb2YgdGhpcy5zdGF0ZS5yYXRlID09PSAnb2JqZWN0JykgPyAnbm9uZScgOiAnYmxvY2snLFxuICAgICAgb3BhY2l0eTogdGhpcy5zdGF0ZS5kb25lXG4gICAgICAgID8gMFxuICAgICAgICA6IDEsXG4gICAgICB0cmFuc2l0aW9uOiAnb3BhY2l0eSAnICsgdGhpcy5wcm9wcy5zcGVlZCArICdzICcgKyB0aGlzLnByb3BzLmVhc2luZ1xuICAgIH07XG4gICAgdmFyIGJhclN0eWxlID0ge1xuICAgICAgd2lkdGg6ICF0aGlzLnN0YXRlLnJhdGVcbiAgICAgICAgPyAwXG4gICAgICAgIDogdGhpcy5zdGF0ZS5yYXRlICsgJyUnLFxuICAgICAgdHJhbnNpdGlvbjogJ3dpZHRoICcgKyB0aGlzLnByb3BzLnNwZWVkICsgJ3MgJyArIHRoaXMucHJvcHMuZWFzaW5nLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGlzLnByb3BzLmNvbG9yLFxuICAgICAgYm94U2hhZG93Q29sb3I6IHRoaXMucHJvcHMuY29sb3JcbiAgICB9O1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnJhdGVcbiAgICAgID8gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImN1LXByb2dyZXNzXCIgc3R5bGU9e3Byb2dyZXNzU3R5bGV9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY3UtcHJvZ3Jlc3MtYmFyXCIgc3R5bGU9e2JhclN0eWxlfT48L2Rpdj5cbiAgICAgICAgICB7dGhpcy5wcm9wcy5zcGlubmVyXG4gICAgICAgICAgICA/IDxTcGlubmVyIGNvbG9yPXt0aGlzLnByb3BzLmNvbG9yfSAvPlxuICAgICAgICAgICAgOiBudWxsfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIClcbiAgICAgIDogbnVsbDtcbiAgfVxufSk7XG4iLCJ2YXIgVG9vbFRpcCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcclxuICAgIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdGlwOiBcInRpcFwiLFxyXG4gICAgICAgICAgICB0cmlnZ2VyOiAnaG92ZXInLFxyXG4gICAgICAgICAgICBkZWxheTogMCxcclxuICAgICAgICAgICAgaG92ZXJhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgcG9zaXRpb246IFwidGlwXCIsXHJcbiAgICAgICAgICAgIHdpZHRoOiBcIjIwMHB4XCIsXHJcbiAgICAgICAgICAgIHR5cGU6ICdzcGFuJyxcclxuICAgICAgICAgICAgYUhyZWY6IFwiI1wiXHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLnByb3BzLnBvc2l0aW9uLFxyXG4gICAgICAgICAgICBpc0FjdGl2ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGlzT25UaXA6IGZhbHNlLFxyXG4gICAgICAgICAgICB0aXBIZWlnaHQ6IFwiXCJcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIGhhbmRsZU1vdXNlT3ZlcjogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIGlmKHRoaXMucHJvcHMudHJpZ2dlcj09XCJob3ZlclwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2lzQWN0aXZlOiB0cnVlfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGhhbmRsZU1vdXNlT3V0OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgaWYodGhpcy5wcm9wcy50cmlnZ2VyPT1cImhvdmVyXCIpIHtcclxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuc3RhdGUuaXNPblRpcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2lzQWN0aXZlOiBmYWxzZX0pO1xyXG4gICAgICAgICAgICB9LmJpbmQodGhpcykgLCB0aGlzLnByb3BzLmRlbGF5KTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBpZih0aGlzLnByb3BzLnRyaWdnZXI9PVwiY2xpY2tcIikge1xyXG4gICAgICAgICAgICBpZih0aGlzLnN0YXRlLmlzQWN0aXZlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc0FjdGl2ZTogZmFsc2V9KTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmKCF0aGlzLnN0YXRlLmlzQWN0aXZlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc0FjdGl2ZTogdHJ1ZX0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGhhbmRsZVRpcE1vdXNlT3ZlcjogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIGlmKHRoaXMucHJvcHMuaG92ZXJhYmxlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2lzT25UaXA6IHRydWV9KTtcclxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNBY3RpdmU6IHRydWV9KTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgaGFuZGxlVGlwTW91c2VPdXQ6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBpZih0aGlzLnByb3BzLmhvdmVyYWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc09uVGlwOiBmYWxzZX0pO1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtpc0FjdGl2ZTogZmFsc2V9KTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgY29tcG9uZW50RGlkVXBkYXRlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aGlzLnNldFRpcFBvc2l0aW9uKCk7XHJcbiAgICB9LFxyXG4gICAgc2V0VGlwUG9zaXRpb246IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciB0aXAgPSB0aGlzLnJlZnMudGlwLmdldERPTU5vZGUoKTtcclxuICAgICAgICB2YXIgY29udCA9IHRoaXMucmVmcy5jb250LmdldERPTU5vZGUoKTtcclxuICAgICAgICBpZighdGhpcy5mbGFnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUudGlwSGVpZ2h0ID0gdGlwLm9mZnNldEhlaWdodDtcclxuICAgICAgICAgICAgdGhpcy5mbGFnID0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHRpcFdpZHRoID0gdGlwLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIHZhciB0aXBIZWlnaHQgPSB0aXAub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIHZhciBjb250V2lkdGggPSBjb250Lm9mZnNldFdpZHRoO1xyXG4gICAgICAgIHZhciBjb250SGVpZ2h0ID0gY29udC5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLnN0YXRlLnBvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJsZWZ0XCI6dGlwLnN0eWxlLnRvcCA9IC0odGlwSGVpZ2h0LWNvbnRIZWlnaHQpLzIrXCJweFwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXAuc3R5bGUubGVmdCA9IC0odGlwV2lkdGgrMjApK1wicHhcIjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwicmlnaHRcIjp0aXAuc3R5bGUudG9wID0gLSh0aXBIZWlnaHQtY29udEhlaWdodCkvMitcInB4XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpcC5zdHlsZS5sZWZ0ID0gXCIxMDAlXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInRvcFwiOnRpcC5zdHlsZS5sZWZ0ID0gLSh0aXBXaWR0aC1jb250V2lkdGgpLzIrXCJweFwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXAuc3R5bGUuYm90dG9tID0gXCIxMDAlXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImJvdHRvbVwiOnRpcC5zdHlsZS5sZWZ0ID0gLSh0aXBXaWR0aC1jb250V2lkdGgpLzIrXCJweFwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXAuc3R5bGUudG9wID0gXCIxMDAlXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDogdGlwLnN0eWxlLnRvcCA9IC0odGlwSGVpZ2h0LWNvbnRIZWlnaHQpLzIrXCJweFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHRpcC5zdHlsZS5sZWZ0ID0gLSh0aXBXaWR0aCsyMCkrXCJweFwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aXAuc3R5bGUuaGVpZ2h0ID0gdGhpcy5zdGF0ZS50aXBIZWlnaHQtMjArXCJweFwiO1xyXG4gICAgICAgIHRoaXMucHJldmVydFRpcE92ZXJmbG93KCk7XHJcbiAgICB9LFxyXG4gICAgcHJldmVydFRpcE92ZXJmbG93OiBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgdGlwWCA9IHRoaXMucmVmcy50aXAuZ2V0RE9NTm9kZSgpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XHJcbiAgICAgICAgdmFyIHRpcFkgPSB0aGlzLnJlZnMudGlwLmdldERPTU5vZGUoKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7XHJcbiAgICAgICAgdmFyIHRpcFdpZHRoID0gdGhpcy5yZWZzLnRpcC5nZXRET01Ob2RlKCkub2Zmc2V0V2lkdGg7XHJcbiAgICAgICAgdmFyIHRpcEhlaWdodCA9IHRoaXMucmVmcy50aXAuZ2V0RE9NTm9kZSgpLm9mZnNldEhlaWdodDtcclxuICAgICAgICB2YXIgYXZhaWxXaWR0aCA9IHBhcnNlSW50KGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGgpO1xyXG4gICAgICAgIGlmKHRpcFggPCAwICYmIHRpcFgrdGlwV2lkdGggPiBhdmFpbFdpZHRoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aXBYIDwgMCkge1xyXG4gICAgICAgICAgICBpZih0aGlzLnN0YXRlLnBvc2l0aW9uID09IFwibGVmdFwiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtwb3NpdGlvbjogXCJ0b3BcIn0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLnN0YXRlLnBvc2l0aW9uID09IFwidG9wXCIgfHwgdGhpcy5zdGF0ZS5wb3NpdGlvbiA9PSBcImJvdHRvbVwiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtwb3NpdGlvbjogXCJyaWdodFwifSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRpcFgrdGlwV2lkdGggPiBhdmFpbFdpZHRoKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuc3RhdGUucG9zaXRpb24gPT0gXCJyaWdodFwiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtwb3NpdGlvbjogXCJib3R0b21cIn0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLnN0YXRlLnBvc2l0aW9uID09IFwiYm90dG9tXCIgfHwgdGhpcy5zdGF0ZS5wb3NpdGlvbiA9PSBcInRvcFwiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtwb3NpdGlvbjogXCJsZWZ0XCJ9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfSxcclxuICAgIGdldFRpcFN0eWxlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiB0aGlzLnN0YXRlLmlzQWN0aXZlP1wiYmxvY2tcIjpcIm5vbmVcIixcclxuICAgICAgICAgICAgY29sb3I6IFwicGlua1wiLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiIzMzM1wiLFxyXG4gICAgICAgICAgICB3aWR0aDogdGhpcy5wcm9wcy53aWR0aCxcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYodGhpcy5wcm9wcy50eXBlPT1cInNwYW5cIikge1xyXG4gICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtcInRvb2x0aXAgXCIrdGhpcy5zdGF0ZS5wb3NpdGlvbn0+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gcmVmPVwiY29udFwiIG9uTW91c2VPdmVyPXt0aGlzLmhhbmRsZU1vdXNlT3Zlcn0gb25Nb3VzZU91dD17dGhpcy5oYW5kbGVNb3VzZU91dH0gb25DbGljaz17dGhpcy5oYW5kbGVDbGlja30+e3RoaXMucHJvcHMuY2hpbGRyZW59PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgb25Nb3VzZU92ZXI9e3RoaXMuaGFuZGxlVGlwTW91c2VPdmVyfSBvbk1vdXNlT3V0PXt0aGlzLmhhbmRsZVRpcE1vdXNlT3V0fSBjbGFzc05hbWU9XCJ0aXBcIiByZWY9XCJ0aXBcIiBzdHlsZT17dGhpcy5nZXRUaXBTdHlsZSgpfT57dGhpcy5wcm9wcy50aXB9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMucHJvcHMudHlwZT09XCJhXCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17XCJ0b29sdGlwIFwiK3RoaXMuc3RhdGUucG9zaXRpb259PlxyXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9e3RoaXMucHJvcHMuYUhyZWZ9IHJlZj1cImNvbnRcIiBvbk1vdXNlT3Zlcj17dGhpcy5oYW5kbGVNb3VzZU92ZXJ9IG9uTW91c2VPdXQ9e3RoaXMuaGFuZGxlTW91c2VPdXR9IG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9Pnt0aGlzLnByb3BzLmNoaWxkcmVufTwvYT5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IG9uTW91c2VPdmVyPXt0aGlzLmhhbmRsZVRpcE1vdXNlT3Zlcn0gb25Nb3VzZU91dD17dGhpcy5oYW5kbGVUaXBNb3VzZU91dH0gY2xhc3NOYW1lPVwidGlwXCIgcmVmPVwidGlwXCIgc3R5bGU9e3RoaXMuZ2V0VGlwU3R5bGUoKX0+e3RoaXMucHJvcHMudGlwfTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLnByb3BzLnR5cGU9PVwiYnV0dG9uXCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17XCJ0b29sdGlwIFwiK3RoaXMuc3RhdGUucG9zaXRpb259PlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gcmVmPVwiY29udFwiIG9uTW91c2VPdmVyPXt0aGlzLmhhbmRsZU1vdXNlT3Zlcn0gb25Nb3VzZU91dD17dGhpcy5oYW5kbGVNb3VzZU91dH0gb25DbGljaz17dGhpcy5oYW5kbGVDbGlja30+e3RoaXMucHJvcHMuY2hpbGRyZW59PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBvbk1vdXNlT3Zlcj17dGhpcy5oYW5kbGVUaXBNb3VzZU92ZXJ9IG9uTW91c2VPdXQ9e3RoaXMuaGFuZGxlVGlwTW91c2VPdXR9IGNsYXNzTmFtZT1cInRpcFwiIHJlZj1cInRpcFwiIHN0eWxlPXt0aGlzLmdldFRpcFN0eWxlKCl9Pnt0aGlzLnByb3BzLnRpcH08L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0pO1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=